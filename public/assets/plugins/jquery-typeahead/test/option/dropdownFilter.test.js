const $=require("jquery"),Typeahead=require("../../src/jquery.typeahead");describe("Typeahead dropdownFilter option Tests",(()=>{"use strict";let e;describe("Tests for boolean",(()=>{beforeAll((()=>{document.body.innerHTML='<div class="typeahead__container">\n                                        <div class="typeahead__query">\n                                            <input class="js-typeahead">\n                                        </div>\n                                    </div>',e=$.typeahead({input:".js-typeahead",minLength:0,maxItem:!1,generateOnLoad:!0,dropdownFilter:!0,display:["display"],template:"{{display}} {{details}}",emptyTemplate:"no result for {{query}}",source:{group1:{data:["group1-data1","group1-data2","group1-data3"]},group2:{data:["group2-data1","group2-data2","group2-data3"]},group3:{data:["group3-data1","group3-data2","group3-data3"]}}})})),it('Should create a filter for every group and one for "all"',(()=>{expect(e.result.length).toEqual(9);let t=e.container.find("."+e.options.selector.dropdownItem);expect(t.length).toEqual(4),expect(t.eq(0).hasClass("group-group1")).toBeTruthy(),expect(t.eq(1).hasClass("group-group2")).toBeTruthy(),expect(t.eq(2).hasClass("group-group3")).toBeTruthy(),expect(t.eq(3).hasClass("group-all")).toBeTruthy()})),it('Should filter results and only display "group1" results',(()=>{let t=e.container.find("."+e.options.selector.dropdownItem);t.eq(0).find("a").trigger("click"),expect(e.result.length).toEqual(3),t.eq(3).find("a").trigger("click"),expect(e.result.length).toEqual(9)})),afterAll((()=>{delete window.Typeahead[".js-typeahead"]}))})),describe("Tests for string",(()=>{beforeAll((()=>{document.body.innerHTML='<div class="typeahead__container">\n                                          <div class="typeahead__query">\n                                              <input class="js-typeahead">\n                                          </div>\n                                      </div>',e=$.typeahead({input:".js-typeahead",minLength:0,maxItem:!1,generateOnLoad:!0,dropdownFilter:"All Groups!",display:["display"],template:"{{display}} {{details}}",emptyTemplate:"no result for {{query}}",source:{group1:{data:["group1-data1","group1-data2","group1-data3"]},group2:{data:["group2-data1","group2-data2","group2-data3"]},group3:{data:["group3-data1","group3-data2","group3-data3"]}}})})),it('Should create a filter for every group and one for "all"',(()=>{expect(e.result.length).toEqual(9);let t=e.container.find("."+e.options.selector.dropdownItem);expect(t.length).toEqual(4),expect(t.eq(0).hasClass("group-group1")).toBeTruthy(),expect(t.eq(1).hasClass("group-group2")).toBeTruthy(),expect(t.eq(2).hasClass("group-group3")).toBeTruthy(),expect(t.eq(3).hasClass("group-all-groups")).toBeTruthy()})),it('Should filter results and only display "group1" results',(()=>{let t=e.container.find("."+e.options.selector.dropdownItem);t.eq(0).find("a").trigger("click"),expect(e.result.length).toEqual(3),t.eq(3).find("a").trigger("click"),expect(e.result.length).toEqual(9)}))})),describe("Tests for static data - dropdownFilter as an object",(()=>{beforeAll((()=>{document.body.innerHTML='<div class="typeahead__container">\n                                          <div class="typeahead__query">\n                                              <input class="js-typeahead">\n                                          </div>\n                                      </div>',e=$.typeahead({input:".js-typeahead",minLength:0,maxItem:!1,generateOnLoad:!0,dropdownFilter:{key:"conference",template:"<strong>{{conference}}</strong> Conference Teams",all:"All Conferences"},display:["name","city"],emptyTemplate:"no result for {{query}}",source:{teams:{data:[{name:"Ducks",img:"ducks",city:"Anaheim",id:"ANA",conference:"Western",division:"Pacific"},{name:"Thrashers",img:"thrashers",city:"Atlanta",id:"ATL",conference:"Eastern",division:"Southeast"}]}}})})),it("Should organize the groups to read from a key inside the objects",(()=>{expect(e.result.length).toEqual(2);let t=e.container.find("."+e.options.selector.dropdownItem);expect(t.length).toEqual(3),expect(t.eq(0).hasClass("conference-western")).toBeTruthy(),expect(t.eq(1).hasClass("conference-eastern")).toBeTruthy(),expect(t.eq(2).hasClass("conference-all")).toBeTruthy(),t.eq(0).find("a").trigger("click"),expect(e.result.length).toEqual(1),t.eq(2).find("a").trigger("click"),expect(e.result.length).toEqual(2)}))}))}));