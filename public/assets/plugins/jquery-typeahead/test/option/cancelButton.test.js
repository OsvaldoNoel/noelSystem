const $=require("jquery"),Typeahead=require("../../src/jquery.typeahead");describe("Typeahead cancelButton option Tests",(()=>{let e;describe("Cancel button is enabled",(()=>{beforeAll((()=>{document.body.innerHTML='<form>\n                <div class="typeahead__container">\n                    <div class="typeahead__field">\n                        <div class="typeahead__query">\n                            <input class="js-typeahead"\n                                   name="q"\n                                   autofocus\n                                   autocomplete="off">\n                        </div>\n                        <div class="typeahead__button">\n                            <button type="submit">\n                                <span class="typeahead__search-icon"></span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>',e=$.typeahead({input:".js-typeahead",minLength:1,cancelButton:!0,source:{data:["test1","test2","test3","test4","test5"]}})})),it("Should show/hide the cancel button when search is empty/not empty",(()=>{expect(e.container.find(`.${e.options.selector.cancelButton}`)).toHaveLength(1),expect(e.container.hasClass("cancel")).toBeFalsy(),e.node.val("t"),e.node.trigger("input"),expect(e.container.hasClass("cancel")).toBeTruthy(),e.node.trigger($.Event("keydown",{keyCode:8})),expect(e.container.hasClass("cancel")).toBeTruthy()})),it("Should show the cancel button when an item is selected",(()=>{e.node.val("t"),e.node.trigger("input"),e.container.find("."+e.options.selector.item).eq(0).find("a").trigger("click"),expect(e.container.find(`.${e.options.selector.cancelButton}`)).toHaveLength(1),expect(e.container.hasClass("cancel")).toBeTruthy()})),it("Should show the cancel button when an item is selected",(()=>{e.node.val("t"),e.node.trigger("input"),e.container.find("."+e.options.selector.item).eq(0).find("a").trigger("click"),e.node.trigger($.Event("keydown",{keyCode:27})),expect(e.container.find(`.${e.options.selector.cancelButton}`)).toHaveLength(1),expect(e.container.hasClass("cancel")).toBeFalsy()}))}))}));