const $=require("jquery"),Typeahead=require("../../src/jquery.typeahead");describe("Typeahead dynamic option Tests as a global option",(()=>{"use strict";let e,t=0,a=0,r=0;beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,maxItemPerGroup:1,dynamic:!0,source:{group1:{data:()=>(t++,["item1"])},group2:{data:()=>{var e=$.Deferred(),t=["item1"];return a++,setTimeout((()=>{Array.isArray(t)?e.resolve(t):e.reject("Invalid data.")}),10),e}},group3:{ajax:{url:"http://test.com/category.json",path:"data",callback:{always:()=>{r++}}}}}})})),it("Should increment every group counter every time a request is made",(o=>{e.node.triggerHandler("input").done((function(){expect(e.result.length).toEqual(3),expect(t).toEqual(1),expect(a).toEqual(1),expect(r).toEqual(1),e.node.triggerHandler("input").done((function(){expect(t).toEqual(2),expect(a).toEqual(2),expect(r).toEqual(2),o()}))}))}))})),describe("Typeahead dynamic option Tests as a group option",(()=>{"use strict";let e,t=0,a=0,r=0;beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,maxItemPerGroup:1,source:{group1:{data:()=>(t++,["item1"])},group2:{dynamic:!0,data:()=>{var e=$.Deferred(),t=["item1"];return a++,setTimeout((()=>{Array.isArray(t)?e.resolve(t):e.reject("Invalid data.")}),10),e}},group3:{ajax:{url:"http://test.com/category.json",path:"data",callback:{always:()=>{r++}}}}}})})),it("Should increment every group counter every time a request is made",(o=>{e.node.triggerHandler("input").done((function(n){expect(e.result.length).toEqual(3),expect(t).toEqual(1),expect(a).toEqual(1),expect(r).toEqual(1),e.node.triggerHandler("input").done((function(){expect(t).toEqual(1),expect(a).toEqual(2),expect(r).toEqual(1),o()}))}))}))})),describe("Typeahead dynamic option Tests - Abort dynamic requests",(()=>{"use strict";let e;beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,dynamic:!0,delay:10,source:{game:{ajax:{url:"http://test.com/game.json",path:"data"}},category:{ajax:{url:"http://test.com/category.json",path:"data"}},tag:{ajax:{url:"http://test.com/tag.json",path:"data"}}}})})),it("Should abort previous requests and display the results for the second request",(t=>{e.node.val("zom").trigger("input"),setTimeout((()=>{e.node.val("zo").triggerHandler("input").done((function(){expect(e.result.length).toBeGreaterThan(0),expect(e.generatedGroupCount).toEqual(e.generateGroups.length),t()}))}),20)}))})),describe("Typeahead dynamic option Tests - 404 endpoint when dynamic requests",(()=>{let e;beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,dynamic:!0,delay:10,source:{game:{ajax:{url:"http://test.com/game.json",path:"data"}},category:{ajax:{url:"http://test.com/invalid.json",path:"data"}},tag:{ajax:{url:"http://test.com/tag.json",path:"data"}}}})})),it("Should display the result of valid endpoints and skip the invalid one",(t=>{e.node.val("zom").triggerHandler("input").done((function(){expect(e.result.length).toBeGreaterThan(0),expect(e.generatedGroupCount).toEqual(e.generateGroups.length),t()}))}))}));