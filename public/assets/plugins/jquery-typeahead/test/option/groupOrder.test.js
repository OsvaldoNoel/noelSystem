const $=require("jquery"),Typeahead=require("../../src/jquery.typeahead");describe("Typeahead groupOrder option Tests",(()=>{"use strict";let e;describe("groupOrder defined as desc",(()=>{beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,group:"category",groupOrder:"desc",display:"name",source:{myGroup:{data:[{category:"Arizona",id:"1",name:"Phil"},{category:"Indiana",id:"3",name:"George"}]}}})})),it("Should have 1 group and contain 2 items ordered DESC",(()=>{expect(e.groupBy).toEqual("category"),e.node.val("").trigger("input"),expect(e.groups).toEqual(["Indiana","Arizona"]),expect(e.resultCountPerGroup).toEqual({Indiana:1,Arizona:1}),expect(e.result[0]).toEqual({matchedKey:"name",category:"Indiana",id:"3",name:"George",group:"myGroup"})}))})),describe("groupOrder defined as a boolean",(()=>{beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,group:"category",groupOrder:!0,display:"name",source:{myGroup:{data:[{category:"Arizona",id:"1",name:"Phil"},{category:"Indiana",id:"3",name:"George"}]}}})})),it("Should have 1 group and contain 2 items ordered ASC",(()=>{expect(e.groupBy).toEqual("category"),e.node.val("").trigger("input"),expect(e.groups).toEqual(["Arizona","Indiana"]),expect(e.resultCountPerGroup).toEqual({Arizona:1,Indiana:1}),expect(e.result[0]).toEqual({matchedKey:"name",category:"Arizona",id:"1",name:"Phil",group:"myGroup"})}))})),describe("groupOrder defined as an Array",(()=>{beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,group:"category",groupOrder:["Indiana","Arizona"],display:"name",source:{myGroup:{data:[{category:"Arizona",id:"1",name:"Phil"},{category:"Indiana",id:"3",name:"George"}]}}})})),it("Should have 1 group and contain 2 items",(()=>{expect(e.groupBy).toEqual("category"),e.node.val("").trigger("input"),expect(e.groups).toEqual(["Indiana","Arizona"]),expect(e.resultCountPerGroup).toEqual({Indiana:1,Arizona:1}),expect(e.result[0]).toEqual({matchedKey:"name",category:"Indiana",id:"3",name:"George",group:"myGroup"})}))}))}));