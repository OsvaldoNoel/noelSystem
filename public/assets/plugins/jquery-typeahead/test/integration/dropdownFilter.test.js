const $=require("jquery"),Typeahead=require("../../src/jquery.typeahead");describe("Typeahead $.ajax.callback.done Tests",(()=>{let e;const a=jest.fn(),t=jest.fn(),n=jest.fn();beforeAll((()=>{document.body.innerHTML='<form>\n            <div class="typeahead__container">\n                <div class="typeahead__field">\n                    <div class="typeahead__query">\n                        <input class="js-typeahead"\n                                name="q"\n                                autofocus\n                                autocomplete="off">\n                    </div>\n                    <div class="typeahead__button">\n                        <button type="submit">\n                            <span class="typeahead__search-icon"></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>',e=$.typeahead({input:".js-typeahead",minLength:0,group:!0,maxItemPerGroup:3,dynamic:!0,dropdownFilter:"all",source:{group1:{ajax:{url:"http://test.com/game.json",path:"data",callback:{done:a}}},group2:{ajax:{url:"http://test.com/category.json",path:"data",callback:{done:t}}},group3:{ajax:{url:"http://test.com/tag.json",path:"data",callback:{done:n}}}}})})),afterEach((()=>{jest.resetAllMocks()})),it("Should trigger all group callbacks",(o=>{e.node.triggerHandler("input").done((function(){expect(e.searchGroups).toEqual(["group1","group2","group3"]),expect(a).toHaveBeenCalled(),expect(t).toHaveBeenCalled(),expect(n).toHaveBeenCalled(),o()}))})),it("Should only trigger the selected group callback",(o=>{e.container.find("."+e.options.selector.dropdownItem).eq(0).find("a").trigger("click"),e.node.triggerHandler("input").done((function(){expect(e.searchGroups).toEqual(["group1"]),expect(a).toHaveBeenCalled(),expect(t).not.toHaveBeenCalled(),expect(n).not.toHaveBeenCalled(),o()}))}))}));