const $=require("jquery"),Typeahead=require("../../src/jquery.typeahead");describe("Typeahead can not display null or boolean if the item is a string",(()=>{"use strict";let e;beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,generateOnLoad:!0,source:{data:[null,!1,!0,"null","false","true"]}})})),it("Should display any value types",(()=>{e.node.trigger("input"),expect(e.result.length).toEqual(3)}))})),describe("Typeahead can display any value type Tests from inside an object",(()=>{"use strict";let e;beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,generateOnLoad:!0,display:["string","numeric","booleanT","booleanF","undefined","deeper.key.level"],source:{data:[{string:"string",numeric:12345,booleanT:!0,booleanF:!1,deeper:{key:{level:42}}}]}})})),it("Should display any value types",(()=>{e.node.trigger("input"),expect(e.resultHtml.find("span").text()).toEqual("string 12345 true false 42")})),it('Should display a boolean "false" search',(()=>{e.node.val("false"),e.node.trigger("input"),expect(e.result.length).toEqual(1)})),it("Should display a numeric value",(()=>{e.node.val("345"),e.node.trigger("input"),expect(e.result.length).toEqual(1)}))}));