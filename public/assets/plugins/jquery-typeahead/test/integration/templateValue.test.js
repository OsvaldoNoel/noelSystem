const $=require("jquery"),Typeahead=require("../../src/jquery.typeahead");describe("Typeahead templateValue option Tests",(()=>{let e;describe("Typeahead templateValue option Tests - One group have the configuration",(()=>{beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,generateOnLoad:!0,display:["id","key1","key2","key3"],highlight:!1,template:function(){return"{{id}} {{key1}} {{key2}} {{key3}}"},source:{group1:{templateValue:"{{key2}}",data:[{id:1,key1:"group1-data1-key1",key2:"group1-data1-key2",key3:"group1-data1-key3"}]},group2:{data:[{id:1,key1:"group2-data1-key1",key2:"group2-data1-key2",key3:"group2-data1-key3"}]}}})})),it("Should populate Typeahead input with the templateValue when an item is clicked",(a=>{expect(e.result.length).toEqual(2),e.resultContainer.find("li:eq(0) a").trigger("click"),expect(e.query).toEqual("group1-data1-key2"),e.node.val("").triggerHandler("input").done((()=>{e.resultContainer.find("li:eq(1) a").trigger("click"),expect(e.query).toEqual("1"),a()}))}))})),describe("Typeahead templateValue option Tests - All groups have the configuration",(()=>{beforeAll((()=>{document.body.innerHTML='<form>\n                <div class="typeahead__container">\n                    <div class="typeahead__field">\n                        <div class="typeahead__query">\n                            <input class="js-typeahead"\n                                   name="q"\n                                   autofocus\n                                   autocomplete="off">\n                        </div>\n                        <div class="typeahead__button">\n                            <button type="submit">\n                                <span class="typeahead__search-icon"></span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>',e=$.typeahead({input:".js-typeahead",minLength:0,generateOnLoad:!0,display:["id","key1","key2","key3"],highlight:!1,blurOnTab:!1,template:function(){return"{{id}} {{key1}} {{key2}} {{key3}}"},templateValue:"{{id}} {{key1}}",source:{group1:{templateValue:"{{key2}}",data:[{id:1,key1:"group1-data1-key1",key2:"group1-data1-key2",key3:"group1-data1-key3"}]},group2:{data:[{id:1,key1:"group2-data1-key1",key2:"group2-data1-key2",key3:"group2-data1-key3"}]},group3:{templateValue:function(){return"{{key3}} test"},data:[{id:1,key1:"group3-data1-key1",key2:"group3-data1-key2",key3:"group3-data1-key3"}]}}})})),it("Should populate Typeahead input with the templateValue when a navigation key is pressed",(()=>{var a=$.Event("keydown");a.keyCode=40;var t=$.Event("keydown");t.keyCode=9,e.node.focus(),$(".js-typeahead").trigger(a),expect(e.node.val()).toEqual("group1-data1-key2"),$(".js-typeahead").trigger(a),expect(e.node.val()).toEqual("1 group2-data1-key1"),$(".js-typeahead").trigger(a),expect(e.node.val()).toEqual("group3-data1-key3 test"),$(".js-typeahead").trigger(a),expect(e.node.val()).toEqual(e.rawQuery),$(".js-typeahead").trigger(t),expect(e.node.val()).toEqual("group1-data1-key2")})),it("Should populate Typeahead input with the templateValue when an item is clicked",(a=>{expect(e.result.length).toEqual(3),e.resultContainer.find("li:eq(0) a").trigger("click"),expect(e.query).toEqual("group1-data1-key2"),expect(e.container.hasClass("result")).toBeFalsy(),e.node.val("").triggerHandler("input").done((()=>{e.resultContainer.find("li:eq(1) a").trigger("click"),expect(e.query).toEqual("1 group2-data1-key1"),e.node.val("").triggerHandler("input").done((()=>{e.resultContainer.find("li:eq(2) a").trigger("click"),expect(e.query).toEqual("group3-data1-key3 test"),a()}))}))}))}))}));