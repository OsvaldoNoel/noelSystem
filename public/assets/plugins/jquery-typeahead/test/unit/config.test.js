const $=require("jquery"),Typeahead=require("../../src/jquery.typeahead");describe("Typeahead Config Tests",(()=>{"use strict";let e;beforeAll((()=>{document.body.innerHTML='<input class="js-typeahead">',e=$.typeahead({input:".js-typeahead",minLength:0,highlight:!1,group:["test","{{group}} options"],groupOrder:"asc",maxItemPerGroup:6,source:{group1:{data:["item1","item2","item2"]},group2:{data:["item1","item2","item2"]}},callback:{onInit:function(e){return this},onSearch:function(e,t){return this}},selector:{container:"typeahead-container-test",result:"typeahead-result-test",list:"typeahead-list-test"},debug:!0})})),it("Should create properties",(()=>{expect(e.namespace).toEqual(".js-typeahead.typeahead")})),it("Should merge options",(()=>{expect(e.options.input).toEqual(".js-typeahead"),expect(e.options.minLength).toEqual(0),expect(e.options.highlight).toBeFalsy(),expect(e.options.groupOrder).toEqual("asc")})),it("Should merge callbacks",(()=>{expect(e.options.callback.onInit).toBeDefined(),expect(e.options.callback.onInit.apply(e).selector).toEqual(".js-typeahead"),expect(e.options.callback.onSearch).toBeDefined(),e.node.val("test"),e.node.trigger("input"),expect(e.options.callback.onSearch.apply(e).query).toEqual("test")})),it("Should merge selectors",(()=>{expect(e.options.selector.container).toEqual("typeahead-container-test"),expect(e.options.selector.result).toEqual("typeahead-result-test"),expect(e.options.selector.list).toEqual("typeahead-list-test")}))}));