import updateGeometry from"../update-geometry";import cls from"../lib/class-names";import*as CSS from"../lib/css";import{env}from"../lib/util";export default function(e){if(!env.supportsTouch&&!env.supportsIePointer)return;const t=e.element;function n(n,o){t.scrollTop-=o,t.scrollLeft-=n,updateGeometry(e)}let o={},r=0,i={},l=null;function a(e){return e.targetTouches?e.targetTouches[0]:e}function c(e){return(!e.pointerType||"pen"!==e.pointerType||0!==e.buttons)&&(!(!e.targetTouches||1!==e.targetTouches.length)||!(!e.pointerType||"mouse"===e.pointerType||e.pointerType===e.MSPOINTER_TYPE_MOUSE))}function s(e){if(!c(e))return;const t=a(e);o.pageX=t.pageX,o.pageY=t.pageY,r=(new Date).getTime(),null!==l&&clearInterval(l)}function p(l){if(c(l)){const c=a(l),s={pageX:c.pageX,pageY:c.pageY},p=s.pageX-o.pageX,u=s.pageY-o.pageY;if(function(e,n,o){if(!t.contains(e))return!1;let r=e;for(;r&&r!==t;){if(r.classList.contains(cls.element.consuming))return!0;const e=CSS.get(r);if(o&&e.overflowY.match(/(scroll|auto)/)){const e=r.scrollHeight-r.clientHeight;if(e>0&&(r.scrollTop>0&&o<0||r.scrollTop<e&&o>0))return!0}if(n&&e.overflowX.match(/(scroll|auto)/)){const e=r.scrollWidth-r.clientWidth;if(e>0&&(r.scrollLeft>0&&n<0||r.scrollLeft<e&&n>0))return!0}r=r.parentNode}return!1}(l.target,p,u))return;n(p,u),o=s;const f=(new Date).getTime(),v=f-r;v>0&&(i.x=p/v,i.y=u/v,r=f),function(n,o){const r=Math.floor(t.scrollTop),i=t.scrollLeft,l=Math.abs(n),a=Math.abs(o);if(a>l){if(o<0&&r===e.contentHeight-e.containerHeight||o>0&&0===r)return 0===window.scrollY&&o>0&&env.isChrome}else if(l>a&&(n<0&&i===e.contentWidth-e.containerWidth||n>0&&0===i))return!0;return!0}(p,u)&&l.preventDefault()}}function u(){e.settings.swipeEasing&&(clearInterval(l),l=setInterval((function(){e.isInitialized?clearInterval(l):i.x||i.y?Math.abs(i.x)<.01&&Math.abs(i.y)<.01?clearInterval(l):e.element?(n(30*i.x,30*i.y),i.x*=.8,i.y*=.8):clearInterval(l):clearInterval(l)}),10))}env.supportsTouch?(e.event.bind(t,"touchstart",s),e.event.bind(t,"touchmove",p),e.event.bind(t,"touchend",u)):env.supportsIePointer&&(window.PointerEvent?(e.event.bind(t,"pointerdown",s),e.event.bind(t,"pointermove",p),e.event.bind(t,"pointerup",u)):window.MSPointerEvent&&(e.event.bind(t,"MSPointerDown",s),e.event.bind(t,"MSPointerMove",p),e.event.bind(t,"MSPointerUp",u)))}