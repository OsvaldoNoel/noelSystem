import*as CSS from"../lib/css";import*as DOM from"../lib/dom";import cls,{addScrollingClass,removeScrollingClass}from"../lib/class-names";import updateGeometry from"../update-geometry";import{toInt}from"../lib/util";export default function(e){bindMouseScrollHandler(e,["containerWidth","contentWidth","pageX","railXWidth","scrollbarX","scrollbarXWidth","scrollLeft","x","scrollbarXRail"]),bindMouseScrollHandler(e,["containerHeight","contentHeight","pageY","railYHeight","scrollbarY","scrollbarYHeight","scrollTop","y","scrollbarYRail"])}function bindMouseScrollHandler(e,[o,t,l,n,r,s,c,i,a]){const u=e.element;let m=null,d=null,p=null;function h(o){o.touches&&o.touches[0]&&(o[l]=o.touches[0].pageY),u[c]=m+p*(o[l]-d),addScrollingClass(e,i),updateGeometry(e),o.stopPropagation(),o.type.startsWith("touch")&&o.changedTouches.length>1&&o.preventDefault()}function g(){removeScrollingClass(e,i),e[a].classList.remove(cls.state.clicking),e.event.unbind(e.ownerDocument,"mousemove",h)}function b(r,i){m=u[c],i&&r.touches&&(r[l]=r.touches[0].pageY),d=r[l],p=(e[t]-e[o])/(e[n]-e[s]),i?e.event.bind(e.ownerDocument,"touchmove",h):(e.event.bind(e.ownerDocument,"mousemove",h),e.event.once(e.ownerDocument,"mouseup",g),r.preventDefault()),e[a].classList.add(cls.state.clicking),r.stopPropagation()}e.event.bind(e[r],"mousedown",(e=>{b(e)})),e.event.bind(e[r],"touchstart",(e=>{b(e,!0)}))}