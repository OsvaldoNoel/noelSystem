import $ from"jquery";export default class Fullscreen{constructor(t){this.context=t,this.$editor=t.layoutInfo.editor,this.$toolbar=t.layoutInfo.toolbar,this.$editable=t.layoutInfo.editable,this.$codable=t.layoutInfo.codable,this.$window=$(window),this.$scrollbar=$("html, body"),this.scrollbarClassName="note-fullscreen-body",this.onResize=()=>{this.resizeTo({h:this.$window.height()-this.$toolbar.outerHeight()})}}resizeTo(t){this.$editable.css("height",t.h),this.$codable.css("height",t.h),this.$codable.data("cmeditor")&&this.$codable.data("cmeditor").setsize(null,t.h)}toggle(){this.$editor.toggleClass("fullscreen");const t=this.isFullscreen();this.$scrollbar.toggleClass(this.scrollbarClassName,t),t?(this.$editable.data("orgHeight",this.$editable.css("height")),this.$editable.data("orgMaxHeight",this.$editable.css("maxHeight")),this.$editable.css("maxHeight",""),this.$window.on("resize",this.onResize).trigger("resize")):(this.$window.off("resize",this.onResize),this.resizeTo({h:this.$editable.data("orgHeight")}),this.$editable.css("maxHeight",this.$editable.css("orgMaxHeight"))),this.context.invoke("toolbar.updateFullscreen",t)}isFullscreen(){return this.$editor.hasClass("fullscreen")}destroy(){this.$scrollbar.removeClass(this.scrollbarClassName)}}