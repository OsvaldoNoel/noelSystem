import{specialKeyUsed}from"./util/util.js";const KeyboardKeyCodesMap={Escape:27,z:90,ArrowLeft:37,ArrowUp:38,ArrowRight:39,ArrowDown:40,Tab:9},getKeyboardEventKey=(e,t)=>t?e:KeyboardKeyCodesMap[e];class Keyboard{constructor(e){this.pswp=e,this._wasFocused=!1,e.on("bindEvents",(()=>{e.options.trapFocus&&(e.options.initialPointerPos||this._focusRoot(),e.events.add(document,"focusin",this._onFocusIn.bind(this))),e.events.add(document,"keydown",this._onKeyDown.bind(this))}));const t=document.activeElement;e.on("destroy",(()=>{e.options.returnFocus&&t&&this._wasFocused&&t.focus()}))}_focusRoot(){!this._wasFocused&&this.pswp.element&&(this.pswp.element.focus(),this._wasFocused=!0)}_onKeyDown(e){const{pswp:t}=this;if(t.dispatch("keydown",{originalEvent:e}).defaultPrevented)return;if(specialKeyUsed(e))return;let o,s,n=!1;const r="key"in e;switch(r?e.key:e.keyCode){case getKeyboardEventKey("Escape",r):t.options.escKey&&(o="close");break;case getKeyboardEventKey("z",r):o="toggleZoom";break;case getKeyboardEventKey("ArrowLeft",r):s="x";break;case getKeyboardEventKey("ArrowUp",r):s="y";break;case getKeyboardEventKey("ArrowRight",r):s="x",n=!0;break;case getKeyboardEventKey("ArrowDown",r):n=!0,s="y";break;case getKeyboardEventKey("Tab",r):this._focusRoot()}if(s){e.preventDefault();const{currSlide:r}=t;t.options.arrowKeys&&"x"===s&&t.getNumItems()>1?o=n?"next":"prev":r&&r.currZoomLevel>r.zoomLevels.fit&&(r.pan[s]+=n?-80:80,r.panTo(r.pan.x,r.pan.y))}o&&(e.preventDefault(),t[o]())}_onFocusIn(e){const{template:t}=this.pswp;t&&document!==e.target&&t!==e.target&&!t.contains(e.target)&&t.focus()}}export default Keyboard;