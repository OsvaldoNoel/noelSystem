import"../libs/Treemap-squared";import Graphics from"../modules/Graphics";import Animations from"../modules/Animations";import Fill from"../modules/Fill";import Helpers from"./common/treemap/Helpers";import Filters from"../modules/Filters";import Utils from"../utils/Utils";export default class TreemapChart{constructor(t,e){this.ctx=t,this.w=t.w,this.strokeWidth=this.w.config.stroke.width,this.helpers=new Helpers(t),this.dynamicAnim=this.w.config.chart.animations.dynamicAnimation,this.labels=[]}draw(t){let e=this.w;const a=new Graphics(this.ctx),i=new Fill(this.ctx);let s=a.group({class:"apexcharts-treemap"});if(e.globals.noData)return s;let r=[];t.forEach((t=>{let e=t.map((t=>Math.abs(t)));r.push(e)})),this.negRange=this.helpers.checkColorRange(),e.config.series.forEach(((t,e)=>{t.data.forEach((t=>{Array.isArray(this.labels[e])||(this.labels[e]=[]),this.labels[e].push(t.x)}))}));return window.TreemapSquared.generate(r,e.globals.gridWidth,e.globals.gridHeight).forEach(((r,o)=>{let l=a.group({class:"apexcharts-series apexcharts-treemap-series",seriesName:Utils.escapeString(e.globals.seriesNames[o]),rel:o+1,"data:realIndex":o});if(e.config.chart.dropShadow.enabled){const t=e.config.chart.dropShadow;new Filters(this.ctx).dropShadow(s,t,o)}let n=a.group({class:"apexcharts-data-labels"});r.forEach(((s,r)=>{const n=s[0],h=s[1],d=s[2],c=s[3];let g=a.drawRect(n,h,d-n,c-h,e.config.plotOptions.treemap.borderRadius,"#fff",1,this.strokeWidth,e.config.plotOptions.treemap.useFillColorAsStroke?m:e.globals.stroke.colors[o]);g.attr({cx:n,cy:h,index:o,i:o,j:r,width:d-n,height:c-h});let p=this.helpers.getShadeColor(e.config.chart.type,o,r,this.negRange),m=p.color;void 0!==e.config.series[o].data[r]&&e.config.series[o].data[r].fillColor&&(m=e.config.series[o].data[r].fillColor);let f=i.fillPath({color:m,seriesNumber:o,dataPointIndex:r});g.node.classList.add("apexcharts-treemap-rect"),g.attr({fill:f}),this.helpers.addListeners(g);let b={x:n+(d-n)/2,y:h+(c-h)/2,width:0,height:0},u={x:n,y:h,width:d-n,height:c-h};if(e.config.chart.animations.enabled&&!e.globals.dataChanged){let t=1;e.globals.resized||(t=e.config.chart.animations.speed),this.animateTreemap(g,b,u,t)}if(e.globals.dataChanged){let t=1;this.dynamicAnim.enabled&&e.globals.shouldAnimate&&(t=this.dynamicAnim.speed,e.globals.previousPaths[o]&&e.globals.previousPaths[o][r]&&e.globals.previousPaths[o][r].rect&&(b=e.globals.previousPaths[o][r].rect),this.animateTreemap(g,b,u,t))}let w=this.getFontSize(s),x=e.config.dataLabels.formatter(this.labels[o][r],{value:e.globals.series[o][r],seriesIndex:o,dataPointIndex:r,w:e});"truncate"===e.config.plotOptions.treemap.dataLabels.format&&(w=parseInt(e.config.dataLabels.style.fontSize,10),x=this.truncateLabels(x,w,n,h,d,c));let y=this.helpers.calculateDataLabels({text:x,x:(n+d)/2,y:(h+c)/2+this.strokeWidth/2+w/3,i:o,j:r,colorProps:p,fontSize:w,series:t});e.config.dataLabels.enabled&&y&&this.rotateToFitLabel(y,w,x,n,h,d,c),l.add(g),null!==y&&l.add(y)})),l.add(n),s.add(l)})),s}getFontSize(t){const e=this.w;let a=function t(e){let a,i=0;if(Array.isArray(e[0]))for(a=0;a<e.length;a++)i+=t(e[a]);else for(a=0;a<e.length;a++)i+=e[a].length;return i}(this.labels)/function t(e){let a,i=0;if(Array.isArray(e[0]))for(a=0;a<e.length;a++)i+=t(e[a]);else for(a=0;a<e.length;a++)i+=1;return i}(this.labels);return function(t,i){let s=t*i,r=Math.pow(s,.5);return Math.min(r/a,parseInt(e.config.dataLabels.style.fontSize,10))}(t[2]-t[0],t[3]-t[1])}rotateToFitLabel(t,e,a,i,s,r,o){const l=new Graphics(this.ctx),n=l.getTextRects(a,e);if(n.width+this.w.config.stroke.width+5>r-i&&n.width<=o-s){let e=l.rotateAroundCenter(t.node);t.node.setAttribute("transform",`rotate(-90 ${e.x} ${e.y}) translate(${n.height/3})`)}}truncateLabels(t,e,a,i,s,r){const o=new Graphics(this.ctx),l=o.getTextRects(t,e).width+this.w.config.stroke.width+5>s-a&&r-i>s-a?r-i:s-a,n=o.getTextBasedOnMaxWidth({text:t,maxWidth:l,fontSize:e});return t.length!==n.length&&l/e<5?"":n}animateTreemap(t,e,a,i){const s=new Animations(this.ctx);s.animateRect(t,{x:e.x,y:e.y,width:e.width,height:e.height},{x:a.x,y:a.y,width:a.width,height:a.height},i,(()=>{s.animationCompleted(t)}))}}