import BarDataLabels from"./common/bar/DataLabels";import BarHelpers from"./common/bar/Helpers";import CoreUtils from"../modules/CoreUtils";import Utils from"../utils/Utils";import Filters from"../modules/Filters";import Graphics from"../modules/Graphics";import Series from"../modules/Series";class Bar{constructor(e,s){this.ctx=e,this.w=e.w;const t=this.w;this.barOptions=t.config.plotOptions.bar,this.isHorizontal=this.barOptions.horizontal,this.strokeWidth=t.config.stroke.width,this.isNullValue=!1,this.isRangeBar=t.globals.seriesRange.length&&this.isHorizontal,this.isVerticalGroupedRangeBar=!t.globals.isBarHorizontal&&t.globals.seriesRange.length&&t.config.plotOptions.bar.rangeBarGroupRows,this.isFunnel=this.barOptions.isFunnel,this.xyRatios=s,null!==this.xyRatios&&(this.xRatio=s.xRatio,this.yRatio=s.yRatio,this.invertedXRatio=s.invertedXRatio,this.invertedYRatio=s.invertedYRatio,this.baseLineY=s.baseLineY,this.baseLineInvertedY=s.baseLineInvertedY),this.yaxisIndex=0,this.translationsIndex=0,this.seriesLen=0,this.pathArr=[];const i=new Series(this.ctx);this.lastActiveBarSerieIndex=i.getActiveConfigSeriesIndex("desc",["bar","column"]),this.columnGroupIndices=[];const a=i.getBarSeriesIndices(),r=new CoreUtils(this.ctx);this.stackedSeriesTotals=r.getStackedSeriesTotals(this.w.config.series.map(((e,s)=>-1===a.indexOf(s)?s:-1)).filter((e=>-1!==e))),this.barHelpers=new BarHelpers(this)}draw(e,s){let t=this.w,i=new Graphics(this.ctx);const a=new CoreUtils(this.ctx,t);e=a.getLogSeries(e),this.series=e,this.yRatio=a.getLogYRatios(this.yRatio),this.barHelpers.initVariables(e);let r=i.group({class:"apexcharts-bar-series apexcharts-plot-series"});t.config.dataLabels.enabled&&this.totalItems>this.barOptions.dataLabels.maxItems&&console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering - ApexCharts");for(let a=0,o=0;a<e.length;a++,o++){let l,n,h,d,b,p,c=[],g=[],u=t.globals.comboCharts?s[a]:a,{columnGroupIndex:x}=this.barHelpers.getGroupIndex(u),m=i.group({class:"apexcharts-series",rel:a+1,seriesName:Utils.escapeString(t.globals.seriesNames[u]),"data:realIndex":u});this.ctx.series.addCollapsedClassToSeries(m,u),e[a].length>0&&(this.visibleI=this.visibleI+1);let y=0,I=0;this.yRatio.length>1&&(this.yaxisIndex=t.globals.seriesYAxisReverseMap[u],this.translationsIndex=u);let f=this.translationsIndex;this.isReversed=t.config.yaxis[this.yaxisIndex]&&t.config.yaxis[this.yaxisIndex].reversed;let v=this.barHelpers.initialPositions();n=v.y,y=v.barHeight,d=v.yDivision,p=v.zeroW,l=v.x,I=v.barWidth,h=v.xDivision,b=v.zeroH,this.horizontal||g.push(l+I/2);let H=i.group({class:"apexcharts-datalabels","data:realIndex":u});t.globals.delayedElements.push({el:H.node}),H.node.classList.add("apexcharts-element-hidden");let w=i.group({class:"apexcharts-bar-goals-markers"}),P=i.group({class:"apexcharts-bar-shadows"});t.globals.delayedElements.push({el:P.node}),P.node.classList.add("apexcharts-element-hidden");for(let s=0;s<e[a].length;s++){const i=this.barHelpers.getStrokeWidth(a,s,u);let r=null;const v={indexes:{i:a,j:s,realIndex:u,translationsIndex:f,bc:o},x:l,y:n,strokeWidth:i,elSeries:m};this.isHorizontal?(r=this.drawBarPaths({...v,barHeight:y,zeroW:p,yDivision:d}),I=this.series[a][s]/this.invertedYRatio):(r=this.drawColumnPaths({...v,xDivision:h,barWidth:I,zeroH:b}),y=this.series[a][s]/this.yRatio[f]);let W=this.barHelpers.getPathFillColor(e,a,s,u);if(this.isFunnel&&this.barOptions.isFunnel3d&&this.pathArr.length&&s>0){const e=this.barHelpers.drawBarShadow({color:"string"==typeof W&&-1===W?.indexOf("url")?W:Utils.hexToRgba(t.globals.colors[a]),prevPaths:this.pathArr[this.pathArr.length-1],currPaths:r});e&&P.add(e)}this.pathArr.push(r);const k=this.barHelpers.drawGoalLine({barXPosition:r.barXPosition,barYPosition:r.barYPosition,goalX:r.goalX,goalY:r.goalY,barHeight:y,barWidth:I});k&&w.add(k),n=r.y,l=r.x,s>0&&g.push(l+I/2),c.push(n),this.renderSeries({realIndex:u,pathFill:W,j:s,i:a,columnGroupIndex:x,pathFrom:r.pathFrom,pathTo:r.pathTo,strokeWidth:i,elSeries:m,x:l,y:n,series:e,barHeight:r.barHeight?r.barHeight:y,barWidth:r.barWidth?r.barWidth:I,elDataLabelsWrap:H,elGoalsMarkers:w,elBarShadows:P,visibleSeries:this.visibleI,type:"bar"})}t.globals.seriesXvalues[u]=g,t.globals.seriesYvalues[u]=c,r.add(m)}return r}renderSeries({realIndex:e,pathFill:s,lineFill:t,j:i,i:a,columnGroupIndex:r,pathFrom:o,pathTo:l,strokeWidth:n,elSeries:h,x:d,y:b,y1:p,y2:c,series:g,barHeight:u,barWidth:x,barXPosition:m,barYPosition:y,elDataLabelsWrap:I,elGoalsMarkers:f,elBarShadows:v,visibleSeries:H,type:w}){const P=this.w,W=new Graphics(this.ctx);if(!t){function R(e){const s=P.config.stroke.colors;let t;return Array.isArray(s)&&s.length>0&&(t=s[e],t||(t=""),"function"==typeof t)?t({value:P.globals.series[e][i],dataPointIndex:i,w:P}):t}const F="function"==typeof P.globals.stroke.colors[e]?R(e):P.globals.stroke.colors[e];t=this.barOptions.distributed?P.globals.stroke.colors[i]:F}P.config.series[a].data[i]&&P.config.series[a].data[i].strokeColor&&(t=P.config.series[a].data[i].strokeColor),this.isNullValue&&(s="none");let k=i/P.config.chart.animations.animateGradually.delay*(P.config.chart.animations.speed/P.globals.dataPoints)/2.4,S=W.renderPaths({i:a,j:i,realIndex:e,pathFrom:o,pathTo:l,stroke:t,strokeWidth:n,strokeLineCap:P.config.stroke.lineCap,fill:s,animationDelay:k,initialSpeed:P.config.chart.animations.speed,dataChangeSpeed:P.config.chart.animations.dynamicAnimation.speed,className:`apexcharts-${w}-area`});S.attr("clip-path",`url(#gridRectMask${P.globals.cuid})`);const X=P.config.forecastDataPoints;X.count>0&&i>=P.globals.dataPoints-X.count&&(S.node.setAttribute("stroke-dasharray",X.dashArray),S.node.setAttribute("stroke-width",X.strokeWidth),S.node.setAttribute("fill-opacity",X.fillOpacity)),void 0!==p&&void 0!==c&&(S.attr("data-range-y1",p),S.attr("data-range-y2",c));new Filters(this.ctx).setSelectionFilter(S,e,i),h.add(S);let L=new BarDataLabels(this).handleBarDataLabels({x:d,y:b,y1:p,y2:c,i:a,j:i,series:g,realIndex:e,columnGroupIndex:r,barHeight:u,barWidth:x,barXPosition:m,barYPosition:y,renderedPath:S,visibleSeries:H});return null!==L.dataLabels&&I.add(L.dataLabels),L.totalDataLabels&&I.add(L.totalDataLabels),h.add(I),f&&h.add(f),v&&h.add(v),h}drawBarPaths({indexes:e,barHeight:s,strokeWidth:t,zeroW:i,x:a,y:r,yDivision:o,elSeries:l}){let n,h=this.w,d=e.i,b=e.j;if(h.globals.isXNumeric)n=(r=(h.globals.seriesX[d][b]-h.globals.minX)/this.invertedXRatio-s)+s*this.visibleI;else if(h.config.plotOptions.bar.hideZeroBarsWhenGrouped){let e=0,t=0;h.globals.seriesPercent.forEach(((s,i)=>{s[b]&&e++,i<d&&0===s[b]&&t++})),e>0&&(s=this.seriesLen*s/e),n=r+s*this.visibleI,n-=s*t}else n=r+s*this.visibleI;this.isFunnel&&(i-=(this.barHelpers.getXForValue(this.series[d][b],i)-i)/2),a=this.barHelpers.getXForValue(this.series[d][b],i);const p=this.barHelpers.getBarpaths({barYPosition:n,barHeight:s,x1:i,x2:a,strokeWidth:t,series:this.series,realIndex:e.realIndex,i:d,j:b,w:h});return h.globals.isXNumeric||(r+=o),this.barHelpers.barBackground({j:b,i:d,y1:n-s*this.visibleI,y2:s*this.seriesLen,elSeries:l}),{pathTo:p.pathTo,pathFrom:p.pathFrom,x1:i,x:a,y:r,goalX:this.barHelpers.getGoalValues("x",i,null,d,b),barYPosition:n,barHeight:s}}drawColumnPaths({indexes:e,x:s,y:t,xDivision:i,barWidth:a,zeroH:r,strokeWidth:o,elSeries:l}){let n,h=this.w,d=e.realIndex,b=e.translationsIndex,p=e.i,c=e.j,g=e.bc;if(h.globals.isXNumeric){const e=this.getBarXForNumericXAxis({x:s,j:c,realIndex:d,barWidth:a});s=e.x,n=e.barXPosition}else if(h.config.plotOptions.bar.hideZeroBarsWhenGrouped){const{nonZeroColumns:e,zeroEncounters:t}=this.barHelpers.getZeroValueEncounters({i:p,j:c});e>0&&(a=this.seriesLen*a/e),n=s+a*this.visibleI,n-=a*t}else n=s+a*this.visibleI;t=this.barHelpers.getYForValue(this.series[p][c],r,b);const u=this.barHelpers.getColumnPaths({barXPosition:n,barWidth:a,y1:r,y2:t,strokeWidth:o,series:this.series,realIndex:d,i:p,j:c,w:h});return h.globals.isXNumeric||(s+=i),this.barHelpers.barBackground({bc:g,j:c,i:p,x1:n-o/2-a*this.visibleI,x2:a*this.seriesLen+o/2,elSeries:l}),{pathTo:u.pathTo,pathFrom:u.pathFrom,x:s,y:t,goalY:this.barHelpers.getGoalValues("y",null,r,p,c,b),barXPosition:n,barWidth:a}}getBarXForNumericXAxis({x:e,barWidth:s,realIndex:t,j:i}){const a=this.w;let r=t;return a.globals.seriesX[t].length||(r=a.globals.maxValsInArrayIndex),a.globals.seriesX[r][i]&&(e=(a.globals.seriesX[r][i]-a.globals.minX)/this.xRatio-s*this.seriesLen/2),{barXPosition:e+s*this.visibleI,x:e}}getPreviousPath(e,s){let t,i=this.w;for(let a=0;a<i.globals.previousPaths.length;a++){let r=i.globals.previousPaths[a];r.paths&&r.paths.length>0&&parseInt(r.realIndex,10)===parseInt(e,10)&&void 0!==i.globals.previousPaths[a].paths[s]&&(t=i.globals.previousPaths[a].paths[s].d)}return t}}export default Bar;