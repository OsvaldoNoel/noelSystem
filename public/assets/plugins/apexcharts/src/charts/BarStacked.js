import CoreUtils from"../modules/CoreUtils";import Bar from"./Bar";import Graphics from"../modules/Graphics";import Utils from"../utils/Utils";class BarStacked extends Bar{draw(s,e){let i=this.w;this.graphics=new Graphics(this.ctx),this.bar=new Bar(this.ctx,this.xyRatios);const t=new CoreUtils(this.ctx,i);s=t.getLogSeries(s),this.yRatio=t.getLogYRatios(this.yRatio),this.barHelpers.initVariables(s),"100%"===i.config.chart.stackType&&(s=i.globals.comboCharts?e.map((s=>i.globals.seriesPercent[s])):i.globals.seriesPercent.slice()),this.series=s,this.barHelpers.initializeStackedPrevVars(this);let r=this.graphics.group({class:"apexcharts-bar-series apexcharts-plot-series"}),a=0,o=0;for(let t=0,l=0;t<s.length;t++,l++){let h,p,g,n,d=i.globals.comboCharts?e[t]:t,{groupIndex:x,columnGroupIndex:b}=this.barHelpers.getGroupIndex(d);this.groupCtx=this[i.globals.seriesGroups[x]];let u=[],c=[],v=0;this.yRatio.length>1&&(this.yaxisIndex=i.globals.seriesYAxisReverseMap[d][0],v=d),this.isReversed=i.config.yaxis[this.yaxisIndex]&&i.config.yaxis[this.yaxisIndex].reversed;let C=this.graphics.group({class:"apexcharts-series",seriesName:Utils.escapeString(i.globals.seriesNames[d]),rel:t+1,"data:realIndex":d});this.ctx.series.addCollapsedClassToSeries(C,d);let m=this.graphics.group({class:"apexcharts-datalabels","data:realIndex":d}),y=this.graphics.group({class:"apexcharts-bar-goals-markers"}),Y=0,H=0,f=this.initialPositions(a,o,h,p,g,n,v);o=f.y,Y=f.barHeight,p=f.yDivision,n=f.zeroW,a=f.x,H=f.barWidth,h=f.xDivision,g=f.zeroH,i.globals.barHeight=Y,i.globals.barWidth=H,this.barHelpers.initializeStackedXYVars(this),1===this.groupCtx.prevY.length&&this.groupCtx.prevY[0].every((s=>isNaN(s)))&&(this.groupCtx.prevY[0]=this.groupCtx.prevY[0].map((()=>g)),this.groupCtx.prevYF[0]=this.groupCtx.prevYF[0].map((()=>0)));for(let e=0;e<i.globals.dataPoints;e++){const r=this.barHelpers.getStrokeWidth(t,e,d),f={indexes:{i:t,j:e,realIndex:d,translationsIndex:v,bc:l},strokeWidth:r,x:a,y:o,elSeries:C,columnGroupIndex:b,seriesGroup:i.globals.seriesGroups[x]};let X=null;this.isHorizontal?(X=this.drawStackedBarPaths({...f,zeroW:n,barHeight:Y,yDivision:p}),H=this.series[t][e]/this.invertedYRatio):(X=this.drawStackedColumnPaths({...f,xDivision:h,barWidth:H,zeroH:g}),Y=this.series[t][e]/this.yRatio[v]);const I=this.barHelpers.drawGoalLine({barXPosition:X.barXPosition,barYPosition:X.barYPosition,goalX:X.goalX,goalY:X.goalY,barHeight:Y,barWidth:H});I&&y.add(I),o=X.y,a=X.x,u.push(a),c.push(o);let R=this.barHelpers.getPathFillColor(s,t,e,d);C=this.renderSeries({realIndex:d,pathFill:R,j:e,i:t,columnGroupIndex:b,pathFrom:X.pathFrom,pathTo:X.pathTo,strokeWidth:r,elSeries:C,x:a,y:o,series:s,barHeight:Y,barWidth:H,elDataLabelsWrap:m,elGoalsMarkers:y,type:"bar",visibleSeries:0})}i.globals.seriesXvalues[d]=u,i.globals.seriesYvalues[d]=c,this.groupCtx.prevY.push(this.groupCtx.yArrj),this.groupCtx.prevYF.push(this.groupCtx.yArrjF),this.groupCtx.prevYVal.push(this.groupCtx.yArrjVal),this.groupCtx.prevX.push(this.groupCtx.xArrj),this.groupCtx.prevXF.push(this.groupCtx.xArrjF),this.groupCtx.prevXVal.push(this.groupCtx.xArrjVal),r.add(C)}return r}initialPositions(s,e,i,t,r,a,o){let l,h,p=this.w;if(this.isHorizontal){t=p.globals.gridHeight/p.globals.dataPoints;let s=p.config.plotOptions.bar.barHeight;l=-1===String(s).indexOf("%")?parseInt(s,10):t*parseInt(s,10)/100,a=p.globals.padHorizontal+(this.isReversed?p.globals.gridWidth-this.baseLineInvertedY:this.baseLineInvertedY),e=(t-l)/2}else{h=i=p.globals.gridWidth/p.globals.dataPoints;let e=p.config.plotOptions.bar.columnWidth;p.globals.isXNumeric&&p.globals.dataPoints>1?h=(i=p.globals.minXDiff/this.xRatio)*parseInt(this.barOptions.columnWidth,10)/100:-1===String(e).indexOf("%")?h=parseInt(e,10):h*=parseInt(e,10)/100,r=p.globals.gridHeight-this.baseLineY[o]-(this.isReversed?p.globals.gridHeight:0),s=p.globals.padHorizontal+(i-h)/2}let g=p.globals.barGroups.length||1;return{x:s,y:e,yDivision:t,xDivision:i,barHeight:l/g,barWidth:h/g,zeroH:r,zeroW:a}}drawStackedBarPaths({indexes:s,barHeight:e,strokeWidth:i,zeroW:t,x:r,y:a,columnGroupIndex:o,seriesGroup:l,yDivision:h,elSeries:p}){let g,n=this.w,d=a+o*e,x=s.i,b=s.j,u=s.realIndex,c=s.translationsIndex,v=0;for(let s=0;s<this.groupCtx.prevXF.length;s++)v+=this.groupCtx.prevXF[s][b];let C=x;if(C=l.indexOf(n.config.series[u].name),C>0){let s=t;this.groupCtx.prevXVal[C-1][b]<0?s=this.series[x][b]>=0?this.groupCtx.prevX[C-1][b]+v-2*(this.isReversed?v:0):this.groupCtx.prevX[C-1][b]:this.groupCtx.prevXVal[C-1][b]>=0&&(s=this.series[x][b]>=0?this.groupCtx.prevX[C-1][b]:this.groupCtx.prevX[C-1][b]-v+2*(this.isReversed?v:0)),g=s}else g=t;r=null===this.series[x][b]?g:g+this.series[x][b]/this.invertedYRatio-2*(this.isReversed?this.series[x][b]/this.invertedYRatio:0);const m=this.barHelpers.getBarpaths({barYPosition:d,barHeight:e,x1:g,x2:r,strokeWidth:i,series:this.series,realIndex:s.realIndex,seriesGroup:l,i:x,j:b,w:n});return this.barHelpers.barBackground({j:b,i:x,y1:d,y2:e,elSeries:p}),a+=h,{pathTo:m.pathTo,pathFrom:m.pathFrom,goalX:this.barHelpers.getGoalValues("x",t,null,x,b,c),barXPosition:g,barYPosition:d,x:r,y:a}}drawStackedColumnPaths({indexes:s,x:e,y:i,xDivision:t,barWidth:r,zeroH:a,columnGroupIndex:o,seriesGroup:l,elSeries:h}){let p=this.w,g=s.i,n=s.j,d=s.bc,x=s.realIndex,b=s.translationsIndex;if(p.globals.isXNumeric){let s=p.globals.seriesX[x][n];s||(s=0),e=(s-p.globals.minX)/this.xRatio-r/2*p.globals.barGroups.length}let u,c=e+o*r,v=0;for(let s=0;s<this.groupCtx.prevYF.length;s++)v+=isNaN(this.groupCtx.prevYF[s][n])?0:this.groupCtx.prevYF[s][n];let C=g;if(l&&(C=l.indexOf(p.globals.seriesNames[x])),C>0&&!p.globals.isXNumeric||C>0&&p.globals.isXNumeric&&p.globals.seriesX[x-1][n]===p.globals.seriesX[x][n]){let s,e;const i=Math.min(this.yRatio.length+1,x+1);if(void 0!==this.groupCtx.prevY[C-1]&&this.groupCtx.prevY[C-1].length)for(let s=1;s<i;s++)if(!isNaN(this.groupCtx.prevY[C-s]?.[n])){e=this.groupCtx.prevY[C-s][n];break}for(let t=1;t<i;t++){if(this.groupCtx.prevYVal[C-t]?.[n]<0){s=this.series[g][n]>=0?e-v+2*(this.isReversed?v:0):e;break}if(this.groupCtx.prevYVal[C-t]?.[n]>=0){s=this.series[g][n]>=0?e:e+v-2*(this.isReversed?v:0);break}}void 0===s&&(s=p.globals.gridHeight),u=this.groupCtx.prevYF[0]?.every((s=>0===s))&&this.groupCtx.prevYF.slice(1,C).every((s=>s.every((s=>isNaN(s)))))?a:s}else u=a;i=this.series[g][n]?u-this.series[g][n]/this.yRatio[b]+2*(this.isReversed?this.series[g][n]/this.yRatio[b]:0):u;const m=this.barHelpers.getColumnPaths({barXPosition:c,barWidth:r,y1:u,y2:i,yRatio:this.yRatio[b],strokeWidth:this.strokeWidth,series:this.series,seriesGroup:l,realIndex:s.realIndex,i:g,j:n,w:p});return this.barHelpers.barBackground({bc:d,j:n,i:g,x1:c,x2:r,elSeries:h}),{pathTo:m.pathTo,pathFrom:m.pathFrom,goalY:this.barHelpers.getGoalValues("y",null,a,g,n),barXPosition:c,x:p.globals.isXNumeric?e:e+t,y:i}}}export default BarStacked;