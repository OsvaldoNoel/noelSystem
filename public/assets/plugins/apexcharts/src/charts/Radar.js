import Fill from"../modules/Fill";import Graphics from"../modules/Graphics";import Markers from"../modules/Markers";import DataLabels from"../modules/DataLabels";import Filters from"../modules/Filters";import Utils from"../utils/Utils";import Helpers from"./common/circle/Helpers";import CoreUtils from"../modules/CoreUtils";class Radar{constructor(s){this.ctx=s,this.w=s.w,this.chartType=this.w.config.chart.type,this.initialAnim=this.w.config.chart.animations.enabled,this.dynamicAnim=this.initialAnim&&this.w.config.chart.animations.dynamicAnimation.enabled,this.animDur=0;const t=this.w;this.graphics=new Graphics(this.ctx),this.lineColorArr=void 0!==t.globals.stroke.colors?t.globals.stroke.colors:t.globals.colors,this.defaultSize=t.globals.svgHeight<t.globals.svgWidth?t.globals.gridHeight+1.5*t.globals.goldenPadding:t.globals.gridWidth,this.isLog=t.config.yaxis[0].logarithmic,this.logBase=t.config.yaxis[0].logBase,this.coreUtils=new CoreUtils(this.ctx),this.maxValue=this.isLog?this.coreUtils.getLogVal(this.logBase,t.globals.maxY,0):t.globals.maxY,this.minValue=this.isLog?this.coreUtils.getLogVal(this.logBase,this.w.globals.minY,0):t.globals.minY,this.polygons=t.config.plotOptions.radar.polygons,this.strokeWidth=t.config.stroke.show?t.config.stroke.width:0,this.size=this.defaultSize/2.1-this.strokeWidth-t.config.chart.dropShadow.blur,t.config.xaxis.labels.show&&(this.size=this.size-t.globals.xAxisLabelsWidth/1.75),void 0!==t.config.plotOptions.radar.size&&(this.size=t.config.plotOptions.radar.size),this.dataRadiusOfPercent=[],this.dataRadius=[],this.angleArr=[],this.yaxisLabelsTextsPos=[]}draw(s){let t=this.w;const a=new Fill(this.ctx),e=[],i=new DataLabels(this.ctx);s.length&&(this.dataPointsLen=s[t.globals.maxValsInArrayIndex].length),this.disAngle=2*Math.PI/this.dataPointsLen;let o=t.globals.gridWidth/2,r=t.globals.gridHeight/2,l=o+t.config.plotOptions.radar.offsetX,h=r+t.config.plotOptions.radar.offsetY,n=this.graphics.group({class:"apexcharts-radar-series apexcharts-plot-series",transform:`translate(${l||0}, ${h||0})`}),c=[],d=null,g=null;if(this.yaxisLabels=this.graphics.group({class:"apexcharts-yaxis"}),s.forEach(((s,o)=>{let r=s.length===t.globals.dataPoints,l=this.graphics.group().attr({class:"apexcharts-series","data:longestSeries":r,seriesName:Utils.escapeString(t.globals.seriesNames[o]),rel:o+1,"data:realIndex":o});this.dataRadiusOfPercent[o]=[],this.dataRadius[o]=[],this.angleArr[o]=[],s.forEach(((s,t)=>{const a=Math.abs(this.maxValue-this.minValue);s-=this.minValue,this.isLog&&(s=this.coreUtils.getLogVal(this.logBase,s,0)),this.dataRadiusOfPercent[o][t]=s/a,this.dataRadius[o][t]=this.dataRadiusOfPercent[o][t]*this.size,this.angleArr[o][t]=t*this.disAngle})),c=this.getDataPointsPos(this.dataRadius[o],this.angleArr[o]);const h=this.createPaths(c,{x:0,y:0});d=this.graphics.group({class:"apexcharts-series-markers-wrap apexcharts-element-hidden"}),g=this.graphics.group({class:"apexcharts-datalabels","data:realIndex":o}),t.globals.delayedElements.push({el:d.node,index:o});const n={i:o,realIndex:o,animationDelay:o,initialSpeed:t.config.chart.animations.speed,dataChangeSpeed:t.config.chart.animations.dynamicAnimation.speed,className:"apexcharts-radar",shouldClipToGrid:!1,bindEventsOnPaths:!1,stroke:t.globals.stroke.colors[o],strokeLineCap:t.config.stroke.lineCap};let p=null;t.globals.previousPaths.length>0&&(p=this.getPreviousPath(o));for(let s=0;s<h.linePathsTo.length;s++){let e=this.graphics.renderPaths({...n,pathFrom:null===p?h.linePathsFrom[s]:p,pathTo:h.linePathsTo[s],strokeWidth:Array.isArray(this.strokeWidth)?this.strokeWidth[o]:this.strokeWidth,fill:"none",drawShadow:!1});l.add(e);let i=a.fillPath({seriesNumber:o}),r=this.graphics.renderPaths({...n,pathFrom:null===p?h.areaPathsFrom[s]:p,pathTo:h.areaPathsTo[s],strokeWidth:0,fill:i,drawShadow:!1});if(t.config.chart.dropShadow.enabled){const s=new Filters(this.ctx),a=t.config.chart.dropShadow;s.dropShadow(r,Object.assign({},a,{noUserSpaceOnUse:!0}),o)}l.add(r)}s.forEach(((s,a)=>{let e=new Markers(this.ctx).getMarkerConfig({cssClass:"apexcharts-marker",seriesIndex:o,dataPointIndex:a}),r=this.graphics.drawMarker(c[a].x,c[a].y,e);r.attr("rel",a),r.attr("j",a),r.attr("index",o),r.node.setAttribute("default-marker-size",e.pSize);let h=this.graphics.group({class:"apexcharts-series-markers"});h&&h.add(r),d.add(h),l.add(d);const n=t.config.dataLabels;if(n.enabled){let s=n.formatter(t.globals.series[o][a],{seriesIndex:o,dataPointIndex:a,w:t});i.plotDataLabelsText({x:c[a].x,y:c[a].y,text:s,textAnchor:"middle",i:o,j:o,parent:g,offsetCorrection:!1,dataLabelsConfig:{...n}})}l.add(g)})),e.push(l)})),this.drawPolygons({parent:n}),t.config.xaxis.labels.show){const s=this.drawXAxisTexts();n.add(s)}return e.forEach((s=>{n.add(s)})),n.add(this.yaxisLabels),n}drawPolygons(s){const t=this.w,{parent:a}=s,e=new Helpers(this.ctx),i=t.globals.yAxisScale[0].result.reverse(),o=i.length;let r=[],l=this.size/(o-1);for(let s=0;s<o;s++)r[s]=l*s;r.reverse();let h=[],n=[];r.forEach(((s,t)=>{const a=Utils.getPolygonPos(s,this.dataPointsLen);let e="";a.forEach(((s,a)=>{if(0===t){const t=this.graphics.drawLine(s.x,s.y,0,0,Array.isArray(this.polygons.connectorColors)?this.polygons.connectorColors[a]:this.polygons.connectorColors);n.push(t)}0===a&&this.yaxisLabelsTextsPos.push({x:s.x,y:s.y}),e+=s.x+","+s.y+" "})),h.push(e)})),h.forEach(((s,e)=>{const i=this.polygons.strokeColors,o=this.polygons.strokeWidth,r=this.graphics.drawPolygon(s,Array.isArray(i)?i[e]:i,Array.isArray(o)?o[e]:o,t.globals.radarPolygons.fill.colors[e]);a.add(r)})),n.forEach((s=>{a.add(s)})),t.config.yaxis[0].show&&this.yaxisLabelsTextsPos.forEach(((s,t)=>{const a=e.drawYAxisTexts(s.x,s.y,t,i[t]);this.yaxisLabels.add(a)}))}drawXAxisTexts(){const s=this.w,t=s.config.xaxis.labels;let a=this.graphics.group({class:"apexcharts-xaxis"}),e=Utils.getPolygonPos(this.size,this.dataPointsLen);return s.globals.labels.forEach(((i,o)=>{let r=s.config.xaxis.labels.formatter,l=new DataLabels(this.ctx);if(e[o]){let h=this.getTextPos(e[o],this.size),n=r(i,{seriesIndex:-1,dataPointIndex:o,w:s});l.plotDataLabelsText({x:h.newX,y:h.newY,text:n,textAnchor:h.textAnchor,i:o,j:o,parent:a,className:"apexcharts-xaxis-label",color:Array.isArray(t.style.colors)&&t.style.colors[o]?t.style.colors[o]:"#a8a8a8",dataLabelsConfig:{textAnchor:h.textAnchor,dropShadow:{enabled:!1},...t},offsetCorrection:!1}).on("click",(t=>{if("function"==typeof s.config.chart.events.xAxisLabelClick){const a=Object.assign({},s,{labelIndex:o});s.config.chart.events.xAxisLabelClick(t,this.ctx,a)}}))}})),a}createPaths(s,t){let a=[],e=[],i=[],o=[];if(s.length){e=[this.graphics.move(t.x,t.y)],o=[this.graphics.move(t.x,t.y)];let r=this.graphics.move(s[0].x,s[0].y),l=this.graphics.move(s[0].x,s[0].y);s.forEach(((t,a)=>{r+=this.graphics.line(t.x,t.y),l+=this.graphics.line(t.x,t.y),a===s.length-1&&(r+="Z",l+="Z")})),a.push(r),i.push(l)}return{linePathsFrom:e,linePathsTo:a,areaPathsFrom:o,areaPathsTo:i}}getTextPos(s,t){let a="middle",e=s.x,i=s.y;return Math.abs(s.x)>=10?s.x>0?(a="start",e+=10):s.x<0&&(a="end",e-=10):a="middle",Math.abs(s.y)>=t-10&&(s.y<0?i-=10:s.y>0&&(i+=10)),{textAnchor:a,newX:e,newY:i}}getPreviousPath(s){let t=this.w,a=null;for(let e=0;e<t.globals.previousPaths.length;e++){let i=t.globals.previousPaths[e];i.paths.length>0&&parseInt(i.realIndex,10)===parseInt(s,10)&&void 0!==t.globals.previousPaths[e].paths[0]&&(a=t.globals.previousPaths[e].paths[0].d)}return a}getDataPointsPos(s,t,a=this.dataPointsLen){s=s||[],t=t||[];let e=[];for(let i=0;i<a;i++){let a={};a.x=s[i]*Math.sin(t[i]),a.y=-s[i]*Math.cos(t[i]),e.push(a)}return e}}export default Radar;