import Data from"../modules/Data";import AxesUtils from"../modules/axes/AxesUtils";import Series from"../modules/Series";import Utils from"../utils/Utils";class Exports{constructor(e){this.ctx=e,this.w=e.w}scaleSvgNode(e,t){let s=parseFloat(e.getAttributeNS(null,"width")),a=parseFloat(e.getAttributeNS(null,"height"));e.setAttributeNS(null,"width",s*t),e.setAttributeNS(null,"height",a*t),e.setAttributeNS(null,"viewBox","0 0 "+s+" "+a)}fixSvgStringForIe11(e){if(!Utils.isIE11())return e.replace(/&nbsp;/g,"&#160;");let t=0,s=e.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g,(e=>(t++,2===t?'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"':e)));return s=s.replace(/xmlns:NS\d+=""/g,""),s=s.replace(/NS\d+:(\w+:\w+=")/g,"$1"),s}getSvgString(e){null==e&&(e=1);let t=this.w.globals.dom.Paper.svg();if(1!==e){const s=this.w.globals.dom.Paper.node.cloneNode(!0);this.scaleSvgNode(s,e),t=(new XMLSerializer).serializeToString(s)}return this.fixSvgStringForIe11(t)}cleanup(){const e=this.w,t=e.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"),s=e.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"),a=e.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");Array.prototype.forEach.call(a,(e=>{e.setAttribute("width",0)})),t&&t[0]&&(t[0].setAttribute("x",-500),t[0].setAttribute("x1",-500),t[0].setAttribute("x2",-500)),s&&s[0]&&(s[0].setAttribute("y",-100),s[0].setAttribute("y1",-100),s[0].setAttribute("y2",-100))}svgUrl(){this.cleanup();const e=this.getSvgString(),t=new Blob([e],{type:"image/svg+xml;charset=utf-8"});return URL.createObjectURL(t)}dataURI(e){return new Promise((t=>{const s=this.w,a=e?e.scale||e.width/s.globals.svgWidth:1;this.cleanup();const l=document.createElement("canvas");l.width=s.globals.svgWidth*a,l.height=parseInt(s.globals.dom.elWrap.style.height,10)*a;const o="transparent"===s.config.chart.background?"#fff":s.config.chart.background;let i=l.getContext("2d");i.fillStyle=o,i.fillRect(0,0,l.width*a,l.height*a);const r=this.getSvgString(a);if(window.canvg&&Utils.isIE11()){let e=window.canvg.Canvg.fromString(i,r,{ignoreClear:!0,ignoreDimensions:!0});e.start();let s=l.msToBlob();e.stop(),t({blob:s})}else{const e="data:image/svg+xml,"+encodeURIComponent(r);let s=new Image;s.crossOrigin="anonymous",s.onload=()=>{if(i.drawImage(s,0,0),l.msToBlob){let e=l.msToBlob();t({blob:e})}else{let e=l.toDataURL("image/png");t({imgURI:e})}},s.src=e}}))}exportToSVG(){this.triggerDownload(this.svgUrl(),this.w.config.chart.toolbar.export.svg.filename,".svg")}exportToPng(){this.dataURI().then((({imgURI:e,blob:t})=>{t?navigator.msSaveOrOpenBlob(t,this.w.globals.chartID+".png"):this.triggerDownload(e,this.w.config.chart.toolbar.export.png.filename,".png")}))}exportToCSV({series:e,fileName:t,columnDelimiter:s=",",lineDelimiter:a="\n"}){const l=this.w;e||(e=l.config.series);let o=[],i=[],r="",n=l.globals.series.map(((e,t)=>-1===l.globals.collapsedSeriesIndices.indexOf(t)?e:[]));const g=e=>"datetime"===l.config.xaxis.type&&String(e).length>=10,c=Math.max(...e.map((e=>e.data?e.data.length:0))),h=new Data(this.ctx),p=new AxesUtils(this.ctx),m=e=>{let t="";if(l.globals.axisCharts){if("category"===l.config.xaxis.type||l.config.xaxis.convertedCatToNumeric)if(l.globals.isBarHorizontal){let s=l.globals.yLabelFormatters[0],a=new Series(this.ctx).getActiveConfigSeriesIndex();t=s(l.globals.labels[e],{seriesIndex:a,dataPointIndex:e,w:l})}else t=p.getLabel(l.globals.labels,l.globals.timescaleLabels,0,e).text;"datetime"===l.config.xaxis.type&&(l.config.xaxis.categories.length?t=l.config.xaxis.categories[e]:l.config.labels.length&&(t=l.config.labels[e]))}else t=l.config.labels[e];return null===t?"nullvalue":(Array.isArray(t)&&(t=t.join(" ")),Utils.isNumber(t)?t:t.split(s).join(""))},u=(t,a)=>{if(o.length&&0===a&&i.push(o.join(s)),t.data){t.data=t.data.length&&t.data||[...Array(c)].map((()=>""));for(let r=0;r<t.data.length;r++){o=[];let c=m(r);if("nullvalue"!==c){if(c||(h.isFormatXY()?c=e[a].data[r].x:h.isFormat2DArray()&&(c=e[a].data[r]?e[a].data[r][0]:"")),0===a){o.push(g(c)?l.config.chart.toolbar.export.csv.dateFormatter(c):Utils.isNumber(c)?c:c.split(s).join(""));for(let t=0;t<l.globals.series.length;t++)h.isFormatXY()?o.push(e[t].data[r]?.y):o.push(n[t][r])}("candlestick"===l.config.chart.type||t.type&&"candlestick"===t.type)&&(o.pop(),o.push(l.globals.seriesCandleO[a][r]),o.push(l.globals.seriesCandleH[a][r]),o.push(l.globals.seriesCandleL[a][r]),o.push(l.globals.seriesCandleC[a][r])),("boxPlot"===l.config.chart.type||t.type&&"boxPlot"===t.type)&&(o.pop(),o.push(l.globals.seriesCandleO[a][r]),o.push(l.globals.seriesCandleH[a][r]),o.push(l.globals.seriesCandleM[a][r]),o.push(l.globals.seriesCandleL[a][r]),o.push(l.globals.seriesCandleC[a][r])),"rangeBar"===l.config.chart.type&&(o.pop(),o.push(l.globals.seriesRangeStart[a][r]),o.push(l.globals.seriesRangeEnd[a][r])),o.length&&i.push(o.join(s))}}}};o.push(l.config.chart.toolbar.export.csv.headerCategory),"boxPlot"===l.config.chart.type?(o.push("minimum"),o.push("q1"),o.push("median"),o.push("q3"),o.push("maximum")):"candlestick"===l.config.chart.type?(o.push("open"),o.push("high"),o.push("low"),o.push("close")):"rangeBar"===l.config.chart.type?(o.push("minimum"),o.push("maximum")):e.map(((e,t)=>{const a=(e.name?e.name:`series-${t}`)+"";l.globals.axisCharts&&o.push(a.split(s).join("")?a.split(s).join(""):`series-${t}`)})),l.globals.axisCharts||(o.push(l.config.chart.toolbar.export.csv.headerValue),i.push(o.join(s))),l.globals.allSeriesHasEqualX||!l.globals.axisCharts||l.config.xaxis.categories.length||l.config.labels.length?e.map(((e,t)=>{l.globals.axisCharts?u(e,t):(o=[],o.push(l.globals.labels[t].split(s).join("")),o.push(n[t]),i.push(o.join(s)))})):(()=>{const t=new Set,a={};e.forEach(((s,l)=>{s?.data.forEach((s=>{let o,i;if(h.isFormatXY())o=s.x,i=s.y;else{if(!h.isFormat2DArray())return;o=s[0],i=s[1]}a[o]||(a[o]=Array(e.length).fill("")),a[o][l]=i,t.add(o)}))})),o.length&&i.push(o.join(s)),Array.from(t).sort().forEach((e=>{i.push([g(e)&&"datetime"===l.config.xaxis.type?l.config.chart.toolbar.export.csv.dateFormatter(e):Utils.isNumber(e)?e:e.split(s).join(""),a[e].join(s)])}))})(),r+=i.join(a),this.triggerDownload("data:text/csv; charset=utf-8,"+encodeURIComponent("\ufeff"+r),t||l.config.chart.toolbar.export.csv.filename,".csv")}triggerDownload(e,t,s){const a=document.createElement("a");a.href=e,a.download=(t||this.w.globals.chartID)+s,document.body.appendChild(a),a.click(),document.body.removeChild(a)}}export default Exports;