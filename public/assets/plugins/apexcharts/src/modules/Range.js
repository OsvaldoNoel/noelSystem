import Utils from"../utils/Utils";import DateTime from"../utils/DateTime";import Scales from"./Scales";class Range{constructor(e){this.ctx=e,this.w=e.w,this.scales=new Scales(e)}init(){this.setYRange(),this.setXRange(),this.setZRange()}getMinYMaxY(e,a=Number.MAX_VALUE,i=-Number.MAX_VALUE,s=null){const t=this.w.config,r=this.w.globals;let n=-Number.MAX_VALUE,l=Number.MIN_VALUE;null===s&&(s=e+1);let m,x=0,o=0;if(r.seriesX.length>=s){m=[...new Set([].concat(...r.seriesX.slice(e,s)))],x=0,o=m.length-1;let a=r.brushSource?.w.config.chart.brush;if(t.chart.zoom.enabled&&t.chart.zoom.autoScaleYaxis||a?.enabled&&a?.autoScaleYaxis){if(t.xaxis.min)for(x=0;x<o&&m[x]<t.xaxis.min;x++);if(t.xaxis.max)for(;o>x&&m[o]>t.xaxis.max;o--);}}let c=r.series,h=c,u=c;"candlestick"===t.chart.type?(h=r.seriesCandleL,u=r.seriesCandleH):"boxPlot"===t.chart.type?(h=r.seriesCandleO,u=r.seriesCandleC):r.isRangeData&&(h=r.seriesRangeStart,u=r.seriesRangeEnd);for(let g=e;g<s;g++){r.dataPoints=Math.max(r.dataPoints,c[g].length);const e=t.series[g].type;r.categoryLabels.length&&(r.dataPoints=r.categoryLabels.filter((e=>void 0!==e)).length),r.labels.length&&"datetime"!==t.xaxis.type&&0!==r.series.reduce(((e,a)=>e+a.length),0)&&(r.dataPoints=Math.max(r.dataPoints,r.labels.length)),m||(x=0,o=r.series[g].length);for(let s=x;s<=o&&s<r.series[g].length;s++){let t=c[g][s];if(null!==t&&Utils.isNumber(t)){switch(void 0!==u[g][s]&&(n=Math.max(n,u[g][s]),a=Math.min(a,u[g][s])),void 0!==h[g][s]&&(a=Math.min(a,h[g][s]),i=Math.max(i,h[g][s])),e){case"candlestick":void 0!==r.seriesCandleC[g][s]&&(n=Math.max(n,r.seriesCandleH[g][s]),a=Math.min(a,r.seriesCandleL[g][s]));break;case"boxPlot":void 0!==r.seriesCandleC[g][s]&&(n=Math.max(n,r.seriesCandleC[g][s]),a=Math.min(a,r.seriesCandleO[g][s]))}e&&"candlestick"!==e&&"boxPlot"!==e&&"rangeArea"!==e&&"rangeBar"!==e&&(n=Math.max(n,r.series[g][s]),a=Math.min(a,r.series[g][s])),i=n,r.seriesGoals[g]&&r.seriesGoals[g][s]&&Array.isArray(r.seriesGoals[g][s])&&r.seriesGoals[g][s].forEach((e=>{l!==Number.MIN_VALUE&&(l=Math.min(l,e.value),a=l),n=Math.max(n,e.value),i=n})),Utils.isFloat(t)&&(t=Utils.noExponents(t),r.yValueDecimal=Math.max(r.yValueDecimal,t.toString().split(".")[1].length)),l>h[g][s]&&h[g][s]<0&&(l=h[g][s])}else r.hasNullValues=!0}"bar"!==e&&"column"!==e||(l<0&&n<0&&(n=0,i=Math.max(i,0)),l===Number.MIN_VALUE&&(l=0,a=Math.min(a,0)))}return"rangeBar"===t.chart.type&&r.seriesRangeStart.length&&r.isBarHorizontal&&(l=a),"bar"===t.chart.type&&(l<0&&n<0&&(n=0),l===Number.MIN_VALUE&&(l=0)),{minY:l,maxY:n,lowestY:a,highestY:i}}setYRange(){let e=this.w.globals,a=this.w.config;e.maxY=-Number.MAX_VALUE,e.minY=Number.MIN_VALUE;let i,s=Number.MAX_VALUE;if(e.isMultipleYAxis){s=Number.MAX_VALUE;for(let a=0;a<e.series.length;a++)i=this.getMinYMaxY(a),e.minYArr[a]=i.lowestY,e.maxYArr[a]=i.highestY,s=Math.min(s,i.lowestY)}if(i=this.getMinYMaxY(0,s,null,e.series.length),"bar"===a.chart.type?(e.minY=i.minY,e.maxY=i.maxY):(e.minY=i.lowestY,e.maxY=i.highestY),s=i.lowestY,a.chart.stacked&&this._setStackedMinMax(),"line"===a.chart.type||"area"===a.chart.type||"scatter"===a.chart.type||"candlestick"===a.chart.type||"boxPlot"===a.chart.type||"rangeBar"===a.chart.type&&!e.isBarHorizontal?e.minY===Number.MIN_VALUE&&s!==-Number.MAX_VALUE&&s!==e.maxY&&(e.minY=s):e.minY=i.minY,a.yaxis.forEach(((a,i)=>{void 0!==a.max&&("number"==typeof a.max?e.maxYArr[i]=a.max:"function"==typeof a.max&&(e.maxYArr[i]=a.max(e.isMultipleYAxis?e.maxYArr[i]:e.maxY)),e.maxY=e.maxYArr[i]),void 0!==a.min&&("number"==typeof a.min?e.minYArr[i]=a.min:"function"==typeof a.min&&(e.minYArr[i]=a.min(e.isMultipleYAxis?e.minYArr[i]===Number.MIN_VALUE?0:e.minYArr[i]:e.minY)),e.minY=e.minYArr[i])})),e.isBarHorizontal){["min","max"].forEach((i=>{void 0!==a.xaxis[i]&&"number"==typeof a.xaxis[i]&&("min"===i?e.minY=a.xaxis[i]:e.maxY=a.xaxis[i])}))}return e.isMultipleYAxis?(this.scales.scaleMultipleYAxes(),e.minY=s):(this.scales.setYScaleForIndex(0,e.minY,e.maxY),e.minY=e.yAxisScale[0].niceMin,e.maxY=e.yAxisScale[0].niceMax,e.minYArr[0]=e.minY,e.maxYArr[0]=e.maxY),e.barGroups=[],e.lineGroups=[],e.areaGroups=[],a.series.forEach((i=>{switch(i.type||a.chart.type){case"bar":case"column":e.barGroups.push(i.group);break;case"line":e.lineGroups.push(i.group);break;case"area":e.areaGroups.push(i.group)}})),e.barGroups=e.barGroups.filter(((e,a,i)=>i.indexOf(e)===a)),e.lineGroups=e.lineGroups.filter(((e,a,i)=>i.indexOf(e)===a)),e.areaGroups=e.areaGroups.filter(((e,a,i)=>i.indexOf(e)===a)),{minY:e.minY,maxY:e.maxY,minYArr:e.minYArr,maxYArr:e.maxYArr,yAxisScale:e.yAxisScale}}setXRange(){let e=this.w.globals,a=this.w.config;const i="numeric"===a.xaxis.type||"datetime"===a.xaxis.type||"category"===a.xaxis.type&&!e.noLabelsProvided||e.noLabelsProvided||e.isXNumeric;if(e.isXNumeric&&(()=>{for(let a=0;a<e.series.length;a++)if(e.labels[a])for(let i=0;i<e.labels[a].length;i++)null!==e.labels[a][i]&&Utils.isNumber(e.labels[a][i])&&(e.maxX=Math.max(e.maxX,e.labels[a][i]),e.initialMaxX=Math.max(e.maxX,e.labels[a][i]),e.minX=Math.min(e.minX,e.labels[a][i]),e.initialMinX=Math.min(e.minX,e.labels[a][i]))})(),e.noLabelsProvided&&0===a.xaxis.categories.length&&(e.maxX=e.labels[e.labels.length-1],e.initialMaxX=e.labels[e.labels.length-1],e.minX=1,e.initialMinX=1),e.isXNumeric||e.noLabelsProvided||e.dataFormatXNumeric){let s;if(void 0===a.xaxis.tickAmount?(s=Math.round(e.svgWidth/150),"numeric"===a.xaxis.type&&e.dataPoints<30&&(s=e.dataPoints-1),s>e.dataPoints&&0!==e.dataPoints&&(s=e.dataPoints-1)):"dataPoints"===a.xaxis.tickAmount?(e.series.length>1&&(s=e.series[e.maxValsInArrayIndex].length-1),e.isXNumeric&&(s=e.maxX-e.minX-1)):s=a.xaxis.tickAmount,e.xTickAmount=s,void 0!==a.xaxis.max&&"number"==typeof a.xaxis.max&&(e.maxX=a.xaxis.max),void 0!==a.xaxis.min&&"number"==typeof a.xaxis.min&&(e.minX=a.xaxis.min),void 0!==a.xaxis.range&&(e.minX=e.maxX-a.xaxis.range),e.minX!==Number.MAX_VALUE&&e.maxX!==-Number.MAX_VALUE)if(a.xaxis.convertedCatToNumeric&&!e.dataFormatXNumeric){let a=[];for(let i=e.minX-1;i<e.maxX;i++)a.push(i+1);e.xAxisScale={result:a,niceMin:a[0],niceMax:a[a.length-1]}}else e.xAxisScale=this.scales.setXScale(e.minX,e.maxX);else e.xAxisScale=this.scales.linearScale(0,s,s,0,a.xaxis.stepSize),e.noLabelsProvided&&e.labels.length>0&&(e.xAxisScale=this.scales.linearScale(1,e.labels.length,s-1,0,a.xaxis.stepSize),e.seriesX=e.labels.slice());i&&(e.labels=e.xAxisScale.result.slice())}return e.isBarHorizontal&&e.labels.length&&(e.xTickAmount=e.labels.length),this._handleSingleDataPoint(),this._getMinXDiff(),{minX:e.minX,maxX:e.maxX}}setZRange(){let e=this.w.globals;if(e.isDataXYZ)for(let a=0;a<e.series.length;a++)if(void 0!==e.seriesZ[a])for(let i=0;i<e.seriesZ[a].length;i++)null!==e.seriesZ[a][i]&&Utils.isNumber(e.seriesZ[a][i])&&(e.maxZ=Math.max(e.maxZ,e.seriesZ[a][i]),e.minZ=Math.min(e.minZ,e.seriesZ[a][i]))}_handleSingleDataPoint(){const e=this.w.globals,a=this.w.config;if(e.minX===e.maxX){let i=new DateTime(this.ctx);if("datetime"===a.xaxis.type){const s=i.getDate(e.minX);a.xaxis.labels.datetimeUTC?s.setUTCDate(s.getUTCDate()-2):s.setDate(s.getDate()-2),e.minX=new Date(s).getTime();const t=i.getDate(e.maxX);a.xaxis.labels.datetimeUTC?t.setUTCDate(t.getUTCDate()+2):t.setDate(t.getDate()+2),e.maxX=new Date(t).getTime()}else("numeric"===a.xaxis.type||"category"===a.xaxis.type&&!e.noLabelsProvided)&&(e.minX=e.minX-2,e.initialMinX=e.minX,e.maxX=e.maxX+2,e.initialMaxX=e.maxX)}}_getMinXDiff(){const e=this.w.globals;e.isXNumeric&&e.seriesX.forEach(((a,i)=>{1===a.length&&a.push(e.seriesX[e.maxValsInArrayIndex][e.seriesX[e.maxValsInArrayIndex].length-1]);const s=a.slice();s.sort(((e,a)=>e-a)),s.forEach(((a,i)=>{if(i>0){let t=a-s[i-1];t>0&&(e.minXDiff=Math.min(t,e.minXDiff))}})),1!==e.dataPoints&&e.minXDiff!==Number.MAX_VALUE||(e.minXDiff=.5)}))}_setStackedMinMax(){const e=this.w.globals;if(!e.series.length)return;let a=e.seriesGroups;a.length||(a=[this.w.globals.seriesNames.map((e=>e))]);let i={},s={};a.forEach((a=>{i[a]=[],s[a]=[];this.w.config.series.map(((i,s)=>a.indexOf(e.seriesNames[s])>-1?s:null)).filter((e=>null!==e)).forEach((t=>{for(let r=0;r<e.series[e.maxValsInArrayIndex].length;r++){void 0===i[a][r]&&(i[a][r]=0,s[a][r]=0),(this.w.config.chart.stacked&&!e.comboCharts||this.w.config.chart.stacked&&e.comboCharts&&(!this.w.config.chart.stackOnlyBar||"bar"===this.w.config.series?.[t]?.type||"column"===this.w.config.series?.[t]?.type))&&null!==e.series[t][r]&&Utils.isNumber(e.series[t][r])&&(e.series[t][r]>0?i[a][r]+=parseFloat(e.series[t][r])+1e-4:s[a][r]+=parseFloat(e.series[t][r]))}}))})),Object.entries(i).forEach((([a])=>{i[a].forEach(((t,r)=>{e.maxY=Math.max(e.maxY,i[a][r]),e.minY=Math.min(e.minY,s[a][r])}))}))}}export default Range;