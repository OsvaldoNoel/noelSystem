import Graphics from"../Graphics";import Series from"../Series";export default class Position{constructor(t){this.ttCtx=t,this.ctx=t.ctx,this.w=t.w}moveXCrosshairs(t,s=null){const e=this.ttCtx;let i=this.w;const l=e.getElXCrosshairs();let a=t-e.xcrosshairsWidth/2,o=i.globals.labels.slice().length;if(null!==s&&(a=i.globals.gridWidth/o*s),null===l||i.globals.isBarHorizontal||(l.setAttribute("x",a),l.setAttribute("x1",a),l.setAttribute("x2",a),l.setAttribute("y2",i.globals.gridHeight),l.classList.add("apexcharts-active")),a<0&&(a=0),a>i.globals.gridWidth&&(a=i.globals.gridWidth),e.isXAxisTooltipEnabled){let t=a;"tickWidth"!==i.config.xaxis.crosshairs.width&&"barWidth"!==i.config.xaxis.crosshairs.width||(t=a+e.xcrosshairsWidth/2),this.moveXAxisTooltip(t)}}moveYCrosshairs(t){const s=this.ttCtx;null!==s.ycrosshairs&&Graphics.setAttrs(s.ycrosshairs,{y1:t,y2:t}),null!==s.ycrosshairsHidden&&Graphics.setAttrs(s.ycrosshairsHidden,{y1:t,y2:t})}moveXAxisTooltip(t){let s=this.w;const e=this.ttCtx;if(null!==e.xaxisTooltip&&0!==e.xcrosshairsWidth){e.xaxisTooltip.classList.add("apexcharts-active");let i=e.xaxisOffY+s.config.xaxis.tooltip.offsetY+s.globals.translateY+1+s.config.xaxis.offsetY;if(t-=e.xaxisTooltip.getBoundingClientRect().width/2,!isNaN(t)){t+=s.globals.translateX;let l=0;l=new Graphics(this.ctx).getTextRects(e.xaxisTooltipText.innerHTML),e.xaxisTooltipText.style.minWidth=l.width+"px",e.xaxisTooltip.style.left=t+"px",e.xaxisTooltip.style.top=i+"px"}}}moveYAxisTooltip(t){const s=this.w,e=this.ttCtx;null===e.yaxisTTEls&&(e.yaxisTTEls=s.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));const i=parseInt(e.ycrosshairsHidden.getAttribute("y1"),10);let l=s.globals.translateY+i;const a=e.yaxisTTEls[t].getBoundingClientRect().height;let o=s.globals.translateYAxisX[t]-2;s.config.yaxis[t].opposite&&(o-=26),l-=a/2,-1===s.globals.ignoreYAxisIndexes.indexOf(t)?(e.yaxisTTEls[t].classList.add("apexcharts-active"),e.yaxisTTEls[t].style.top=l+"px",e.yaxisTTEls[t].style.left=o+s.config.yaxis[t].tooltip.offsetX+"px"):e.yaxisTTEls[t].classList.remove("apexcharts-active")}moveTooltip(t,s,e=null){let i=this.w,l=this.ttCtx;const a=l.getElTooltip();let o=l.tooltipRect,r=null!==e?parseFloat(e):1,c=parseFloat(t)+r+5,h=parseFloat(s)+r/2;if(c>i.globals.gridWidth/2&&(c=c-o.ttWidth-r-10),c>i.globals.gridWidth-o.ttWidth-10&&(c=i.globals.gridWidth-o.ttWidth),c<-20&&(c=-20),i.config.tooltip.followCursor){const t=l.getElGrid().getBoundingClientRect();c=l.e.clientX-t.left,c>i.globals.gridWidth/2&&(c-=l.tooltipRect.ttWidth),h=l.e.clientY+i.globals.translateY-t.top,h>i.globals.gridHeight/2&&(h-=l.tooltipRect.ttHeight)}else i.globals.isBarHorizontal||o.ttHeight/2+h>i.globals.gridHeight&&(h=i.globals.gridHeight-o.ttHeight+i.globals.translateY);isNaN(c)||(c+=i.globals.translateX,a.style.left=c+"px",a.style.top=h+"px")}moveMarkers(t,s){let e=this.w,i=this.ttCtx;if(e.globals.markers.size[t]>0){let l=e.globals.dom.baseEl.querySelectorAll(` .apexcharts-series[data\\:realIndex='${t}'] .apexcharts-marker`);for(let t=0;t<l.length;t++)parseInt(l[t].getAttribute("rel"),10)===s&&(i.marker.resetPointsSize(),i.marker.enlargeCurrentPoint(s,l[t]))}else i.marker.resetPointsSize(),this.moveDynamicPointOnHover(s,t)}moveDynamicPointOnHover(t,s){let e=this.w,i=this.ttCtx,l=0,a=0,o=e.globals.pointsArray,r=i.tooltipUtil.getHoverMarkerSize(s);const c=e.config.series[s].type;if(c&&("column"===c||"candlestick"===c||"boxPlot"===c))return;l=o[s][t][0],a=o[s][t][1]?o[s][t][1]:0;let h=e.globals.dom.baseEl.querySelector(`.apexcharts-series[data\\:realIndex='${s}'] .apexcharts-series-markers circle`);h&&a<e.globals.gridHeight&&a>0&&(h.setAttribute("r",r),h.setAttribute("cx",l),h.setAttribute("cy",a)),this.moveXCrosshairs(l),i.fixedTooltip||this.moveTooltip(l,a,r)}moveDynamicPointsOnHover(t){const s=this.ttCtx;let e=s.w,i=0,l=0,a=0,o=e.globals.pointsArray;a=new Series(this.ctx).getActiveConfigSeriesIndex("asc",["line","area","scatter","bubble"]);let r=s.tooltipUtil.getHoverMarkerSize(a);o[a]&&(i=o[a][t][0],l=o[a][t][1]);let c=s.tooltipUtil.getAllMarkers();if(null!==c)for(let s=0;s<e.globals.series.length;s++){let l=o[s];if(e.globals.comboCharts&&void 0===l&&c.splice(s,0,null),l&&l.length){let l,a=o[s][t][1];if(c[s].setAttribute("cx",i),"rangeArea"===e.config.chart.type&&!e.globals.comboCharts){const i=t+e.globals.series[s].length;l=o[s][i][1];a-=Math.abs(a-l)/2}null!==a&&!isNaN(a)&&a<e.globals.gridHeight+r&&a+r>0?(c[s]&&c[s].setAttribute("r",r),c[s]&&c[s].setAttribute("cy",a)):c[s]&&c[s].setAttribute("r",0)}}this.moveXCrosshairs(i),s.fixedTooltip||this.moveTooltip(i,l||e.globals.gridHeight,r)}moveStickyTooltipOverBars(t,s){const e=this.w,i=this.ttCtx;let l=e.globals.columnSeries?e.globals.columnSeries.length:e.globals.series.length,a=l>=2&&l%2==0?Math.floor(l/2):Math.floor(l/2)+1;if(e.globals.isBarHorizontal){a=new Series(this.ctx).getActiveConfigSeriesIndex("desc")+1}let o=e.globals.dom.baseEl.querySelector(`.apexcharts-bar-series .apexcharts-series[rel='${a}'] path[j='${t}'], .apexcharts-candlestick-series .apexcharts-series[rel='${a}'] path[j='${t}'], .apexcharts-boxPlot-series .apexcharts-series[rel='${a}'] path[j='${t}'], .apexcharts-rangebar-series .apexcharts-series[rel='${a}'] path[j='${t}']`);o||"number"!=typeof s||(o=e.globals.dom.baseEl.querySelector(`.apexcharts-bar-series .apexcharts-series[data\\:realIndex='${s}'] path[j='${t}'],\n        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='${s}'] path[j='${t}'],\n        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='${s}'] path[j='${t}'],\n        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='${s}'] path[j='${t}']`));let r=o?parseFloat(o.getAttribute("cx")):0,c=o?parseFloat(o.getAttribute("cy")):0,h=o?parseFloat(o.getAttribute("barWidth")):0;let n=i.getElGrid().getBoundingClientRect();const g=o&&(o.classList.contains("apexcharts-candlestick-area")||o.classList.contains("apexcharts-boxPlot-area"));e.globals.isXNumeric?(o&&!g&&(r-=l%2!=0?h/2:0),o&&g&&e.globals.comboCharts&&(r-=h/2)):e.globals.isBarHorizontal||(r=i.xAxisTicksPositions[t-1]+i.dataPointsDividedWidth/2,isNaN(r)&&(r=i.xAxisTicksPositions[t]-i.dataPointsDividedWidth/2)),e.globals.isBarHorizontal?c-=i.tooltipRect.ttHeight:e.config.tooltip.followCursor?c=i.e.clientY-n.top-i.tooltipRect.ttHeight/2:c+i.tooltipRect.ttHeight+15>e.globals.gridHeight&&(c=e.globals.gridHeight),e.globals.isBarHorizontal||this.moveXCrosshairs(r),i.fixedTooltip||this.moveTooltip(r,c||e.globals.gridHeight)}}