import Utils from"../../utils/Utils";class Intersect{constructor(t){this.w=t.w;const e=this.w;this.ttCtx=t,this.isVerticalGroupedRangeBar=!e.globals.isBarHorizontal&&"rangeBar"===e.config.chart.type&&e.config.plotOptions.bar.rangeBarGroupRows}getAttr(t,e){return parseFloat(t.target.getAttribute(e))}handleHeatTreeTooltip({e:t,opt:e,x:o,y:i,type:a}){const s=this.ttCtx,r=this.w;if(t.target.classList.contains(`apexcharts-${a}-rect`)){let a=this.getAttr(t,"i"),l=this.getAttr(t,"j"),n=this.getAttr(t,"cx"),g=this.getAttr(t,"cy"),p=this.getAttr(t,"width"),c=this.getAttr(t,"height");if(s.tooltipLabels.drawSeriesTexts({ttItems:e.ttItems,i:a,j:l,shared:!1,e:t}),r.globals.capturedSeriesIndex=a,r.globals.capturedDataPointIndex=l,o=n+s.tooltipRect.ttWidth/2+p,i=g+s.tooltipRect.ttHeight/2-c/2,s.tooltipPosition.moveXCrosshairs(n+p/2),o>r.globals.gridWidth/2&&(o=n-s.tooltipRect.ttWidth/2+p),s.w.config.tooltip.followCursor){let t=r.globals.dom.elWrap.getBoundingClientRect();o=r.globals.clientX-t.left-(o>r.globals.gridWidth/2?s.tooltipRect.ttWidth:0),i=r.globals.clientY-t.top-(i>r.globals.gridHeight/2?s.tooltipRect.ttHeight:0)}}return{x:o,y:i}}handleMarkerTooltip({e:t,opt:e,x:o,y:i}){let a=this.w;const s=this.ttCtx;let r,l;if(t.target.classList.contains("apexcharts-marker")){let n=parseInt(e.paths.getAttribute("cx"),10),g=parseInt(e.paths.getAttribute("cy"),10),p=parseFloat(e.paths.getAttribute("val"));if(l=parseInt(e.paths.getAttribute("rel"),10),r=parseInt(e.paths.parentNode.parentNode.parentNode.getAttribute("rel"),10)-1,s.intersect){const t=Utils.findAncestor(e.paths,"apexcharts-series");t&&(r=parseInt(t.getAttribute("data:realIndex"),10))}if(s.tooltipLabels.drawSeriesTexts({ttItems:e.ttItems,i:r,j:l,shared:!s.showOnIntersect&&a.config.tooltip.shared,e:t}),"mouseup"===t.type&&s.markerClick(t,r,l),a.globals.capturedSeriesIndex=r,a.globals.capturedDataPointIndex=l,o=n,i=g+a.globals.translateY-1.4*s.tooltipRect.ttHeight,s.w.config.tooltip.followCursor){const t=s.getElGrid().getBoundingClientRect();i=s.e.clientY+a.globals.translateY-t.top}p<0&&(i=g),s.marker.enlargeCurrentPoint(l,e.paths,o,i)}return{x:o,y:i}}handleBarTooltip({e:t,opt:e}){const o=this.w,i=this.ttCtx,a=i.getElTooltip();let s,r=0,l=0,n=0,g=0,p=this.getBarTooltipXY({e:t,opt:e});g=p.i;let c=p.barHeight,h=p.j;o.globals.capturedSeriesIndex=g,o.globals.capturedDataPointIndex=h,o.globals.isBarHorizontal&&i.tooltipUtil.hasBars()||!o.config.tooltip.shared?(l=p.x,n=p.y,s=Array.isArray(o.config.stroke.width)?o.config.stroke.width[g]:o.config.stroke.width,r=l):o.globals.comboCharts||o.config.tooltip.shared||(r/=2),isNaN(n)&&(n=o.globals.svgHeight-i.tooltipRect.ttHeight);const d=parseInt(e.paths.parentNode.getAttribute("data:realIndex"),10),b=o.globals.isMultipleYAxis?o.config.yaxis[d]&&o.config.yaxis[d].reversed:o.config.yaxis[0].reversed;if(l+i.tooltipRect.ttWidth>o.globals.gridWidth&&!b?l-=i.tooltipRect.ttWidth:l<0&&(l=0),i.w.config.tooltip.followCursor){const t=i.getElGrid().getBoundingClientRect();n=i.e.clientY-t.top}null===i.tooltip&&(i.tooltip=o.globals.dom.baseEl.querySelector(".apexcharts-tooltip")),o.config.tooltip.shared||(o.globals.comboBarCount>0?i.tooltipPosition.moveXCrosshairs(r+s/2):i.tooltipPosition.moveXCrosshairs(r)),!i.fixedTooltip&&(!o.config.tooltip.shared||o.globals.isBarHorizontal&&i.tooltipUtil.hasBars())&&(b&&(l-=i.tooltipRect.ttWidth,l<0&&(l=0)),!b||o.globals.isBarHorizontal&&i.tooltipUtil.hasBars()||(n=n+c-2*(o.globals.series[g][h]<0?c:0)),n=n+o.globals.translateY-i.tooltipRect.ttHeight/2,a.style.left=l+o.globals.translateX+"px",a.style.top=n+"px")}getBarTooltipXY({e:t,opt:e}){let o=this.w,i=null;const a=this.ttCtx;let s=0,r=0,l=0,n=0,g=0;const p=t.target.classList;if(p.contains("apexcharts-bar-area")||p.contains("apexcharts-candlestick-area")||p.contains("apexcharts-boxPlot-area")||p.contains("apexcharts-rangebar-area")){let p=t.target,c=p.getBoundingClientRect(),h=e.elGrid.getBoundingClientRect(),d=c.height;g=c.height;let b=c.width,u=parseInt(p.getAttribute("cx"),10),x=parseInt(p.getAttribute("cy"),10);n=parseFloat(p.getAttribute("barWidth"));const f="touchmove"===t.type?t.touches[0].clientX:t.clientX;i=parseInt(p.getAttribute("j"),10),s=parseInt(p.parentNode.getAttribute("rel"),10)-1;let I=p.getAttribute("data-range-y1"),A=p.getAttribute("data-range-y2");o.globals.comboCharts&&(s=parseInt(p.parentNode.getAttribute("data:realIndex"),10));const y=t=>o.globals.isXNumeric?u-b/2:this.isVerticalGroupedRangeBar?u+b/2:u-a.dataPointsDividedWidth+b/2,w=()=>x-a.dataPointsDividedHeight+d/2-a.tooltipRect.ttHeight/2;a.tooltipLabels.drawSeriesTexts({ttItems:e.ttItems,i:s,j:i,y1:I?parseInt(I,10):null,y2:A?parseInt(A,10):null,shared:!a.showOnIntersect&&o.config.tooltip.shared,e:t}),o.config.tooltip.followCursor?o.globals.isBarHorizontal?(r=f-h.left+15,l=w()):(r=y(r),l=t.clientY-h.top-a.tooltipRect.ttHeight/2-15):o.globals.isBarHorizontal?(r=u,r<a.xyRatios.baseLineInvertedY&&(r=u-a.tooltipRect.ttWidth),l=w()):(r=y(r),l=x)}return{x:r,y:l,barHeight:g,barWidth:n,i:s,j:i}}}export default Intersect;