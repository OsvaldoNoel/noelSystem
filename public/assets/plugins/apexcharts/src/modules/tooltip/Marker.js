import Graphics from"../Graphics";import Position from"./Position";import Markers from"../../modules/Markers";import Utils from"../../utils/Utils";export default class Marker{constructor(t){this.w=t.w,this.ttCtx=t,this.ctx=t.ctx,this.tooltipPosition=new Position(t)}drawDynamicPoints(){let t=this.w,e=new Graphics(this.ctx),r=new Markers(this.ctx),i=t.globals.dom.baseEl.querySelectorAll(".apexcharts-series");i=[...i],t.config.chart.stacked&&i.sort(((t,e)=>parseFloat(t.getAttribute("data:realIndex"))-parseFloat(e.getAttribute("data:realIndex"))));for(let s=0;s<i.length;s++){let o=i[s].querySelector(".apexcharts-series-markers-wrap");if(null!==o){let i,s=`apexcharts-marker w${(Math.random()+1).toString(36).substring(4)}`;"line"!==t.config.chart.type&&"area"!==t.config.chart.type||t.globals.comboCharts||t.config.tooltip.intersect||(s+=" no-pointer-events");let a=r.getMarkerConfig({cssClass:s,seriesIndex:Number(o.getAttribute("data:realIndex"))});i=e.drawMarker(0,0,a),i.node.setAttribute("default-marker-size",0);let l=document.createElementNS(t.globals.SVGNS,"g");l.classList.add("apexcharts-series-markers"),l.appendChild(i.node),o.appendChild(l)}}}enlargeCurrentPoint(t,e,r=null,i=null){let s=this.w;"bubble"!==s.config.chart.type&&this.newPointSize(t,e);let o=e.getAttribute("cx"),a=e.getAttribute("cy");if(null!==r&&null!==i&&(o=r,a=i),this.tooltipPosition.moveXCrosshairs(o),!this.fixedTooltip){if("radar"===s.config.chart.type){const t=this.ttCtx.getElGrid().getBoundingClientRect();o=this.ttCtx.e.clientX-t.left}this.tooltipPosition.moveTooltip(o,a,s.config.markers.hover.size)}}enlargePoints(t){let e=this.w,r=this;const i=this.ttCtx;let s=t,o=e.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"),a=e.config.markers.hover.size;for(let t=0;t<o.length;t++){let l=o[t].getAttribute("rel"),n=o[t].getAttribute("index");if(void 0===a&&(a=e.globals.markers.size[n]+e.config.markers.hover.sizeOffset),s===parseInt(l,10)){r.newPointSize(s,o[t]);let e=o[t].getAttribute("cx"),l=o[t].getAttribute("cy");r.tooltipPosition.moveXCrosshairs(e),i.fixedTooltip||r.tooltipPosition.moveTooltip(e,l,a)}else r.oldPointSize(o[t])}}newPointSize(t,e){let r=this.w,i=r.config.markers.hover.size,s=0===t?e.parentNode.firstChild:e.parentNode.lastChild;if("0"!==s.getAttribute("default-marker-size")){const t=parseInt(s.getAttribute("index"),10);void 0===i&&(i=r.globals.markers.size[t]+r.config.markers.hover.sizeOffset),i<0&&(i=0),s.setAttribute("r",i)}}oldPointSize(t){const e=parseFloat(t.getAttribute("default-marker-size"));t.setAttribute("r",e)}resetPointsSize(){let t=this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker");for(let e=0;e<t.length;e++){const r=parseFloat(t[e].getAttribute("default-marker-size"));Utils.isNumber(r)&&r>=0?t[e].setAttribute("r",r):t[e].setAttribute("r",0)}}}