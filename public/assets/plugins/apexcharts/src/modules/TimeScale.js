import DateTime from"../utils/DateTime";import Dimensions from"./dimensions/Dimensions";import Graphics from"./Graphics";import Utils from"../utils/Utils";const MINUTES_IN_DAY=1440,SECONDS_IN_DAY=86400,MIN_ZOOM_DAYS=10/86400;class TimeScale{constructor(e){this.ctx=e,this.w=e.w,this.timeScaleArray=[],this.utc=this.w.config.xaxis.labels.datetimeUTC}calculateTimeScaleTicks(e,t){let n=this.w;if(n.globals.allSeriesCollapsed)return n.globals.labels=[],n.globals.timescaleLabels=[],[];let i=new DateTime(this.ctx);const a=(t-e)/864e5;this.determineInterval(a),n.globals.disableZoomIn=!1,n.globals.disableZoomOut=!1,a<MIN_ZOOM_DAYS?n.globals.disableZoomIn=!0:a>5e4&&(n.globals.disableZoomOut=!0);const s=i.getTimeUnitsfromTimestamp(e,t,this.utc),r=n.globals.gridWidth/a,o=r/24,l=o/60,h=l/60;let c=Math.floor(24*a),u=Math.floor(1440*a),m=Math.floor(86400*a),d=Math.floor(a),y=Math.floor(a/30),f=Math.floor(a/365);const M={minMillisecond:s.minMillisecond,minSecond:s.minSecond,minMinute:s.minMinute,minHour:s.minHour,minDate:s.minDate,minMonth:s.minMonth,minYear:s.minYear};const v={firstVal:M,currentMillisecond:M.minMillisecond,currentSecond:M.minSecond,currentMinute:M.minMinute,currentHour:M.minHour,currentMonthDate:M.minDate,currentDate:M.minDate,currentMonth:M.minMonth,currentYear:M.minYear,daysWidthOnXAxis:r,hoursWidthOnXAxis:o,minutesWidthOnXAxis:l,secondsWidthOnXAxis:h,numberOfSeconds:m,numberOfMinutes:u,numberOfHours:c,numberOfDays:d,numberOfMonths:y,numberOfYears:f};switch(this.tickInterval){case"years":this.generateYearScale(v);break;case"months":case"half_year":this.generateMonthScale(v);break;case"months_days":case"months_fortnight":case"days":case"week_days":this.generateDayScale(v);break;case"hours":this.generateHourScale(v);break;case"minutes_fives":case"minutes":this.generateMinuteScale(v);break;case"seconds_tens":case"seconds_fives":case"seconds":this.generateSecondScale(v)}const b=this.timeScaleArray.map((e=>{let t={position:e.position,unit:e.unit,year:e.year,day:e.day?e.day:1,hour:e.hour?e.hour:0,month:e.month+1};return"month"===e.unit?{...t,day:1,value:e.value+1}:"day"===e.unit||"hour"===e.unit?{...t,value:e.value}:"minute"===e.unit?{...t,value:e.value,minute:e.value}:"second"===e.unit?{...t,value:e.value,minute:e.minute,second:e.second}:e}));return b.filter((e=>{let t=1,i=Math.ceil(n.globals.gridWidth/120),a=e.value;void 0!==n.config.xaxis.tickAmount&&(i=n.config.xaxis.tickAmount),b.length>i&&(t=Math.floor(b.length/i));let s=!1,r=!1;switch(this.tickInterval){case"years":"year"===e.unit&&(s=!0);break;case"half_year":t=7,"year"===e.unit&&(s=!0);break;case"months":t=1,"year"===e.unit&&(s=!0);break;case"months_fortnight":t=15,"year"!==e.unit&&"month"!==e.unit||(s=!0),30===a&&(r=!0);break;case"months_days":t=10,"month"===e.unit&&(s=!0),30===a&&(r=!0);break;case"week_days":t=8,"month"===e.unit&&(s=!0);break;case"days":t=1,"month"===e.unit&&(s=!0);break;case"hours":"day"===e.unit&&(s=!0);break;case"minutes_fives":case"seconds_fives":a%5!=0&&(r=!0);break;case"seconds_tens":a%10!=0&&(r=!0)}if("hours"===this.tickInterval||"minutes_fives"===this.tickInterval||"seconds_tens"===this.tickInterval||"seconds_fives"===this.tickInterval){if(!r)return!0}else if((a%t==0||s)&&!r)return!0}))}recalcDimensionsBasedOnFormat(e,t){const n=this.w,i=this.formatDates(e),a=this.removeOverlappingTS(i);n.globals.timescaleLabels=a.slice(),new Dimensions(this.ctx).plotCoords()}determineInterval(e){const t=24*e,n=60*t;switch(!0){case e/365>5:this.tickInterval="years";break;case e>800:this.tickInterval="half_year";break;case e>180:this.tickInterval="months";break;case e>90:this.tickInterval="months_fortnight";break;case e>60:this.tickInterval="months_days";break;case e>30:this.tickInterval="week_days";break;case e>2:this.tickInterval="days";break;case t>2.4:this.tickInterval="hours";break;case n>15:this.tickInterval="minutes_fives";break;case n>5:this.tickInterval="minutes";break;case n>1:this.tickInterval="seconds_tens";break;case 60*n>20:this.tickInterval="seconds_fives";break;default:this.tickInterval="seconds"}}generateYearScale({firstVal:e,currentMonth:t,currentYear:n,daysWidthOnXAxis:i,numberOfYears:a}){let s=e.minYear,r=0;const o=new DateTime(this.ctx);let l="year";if(e.minDate>1||e.minMonth>0){let n=o.determineRemainingDaysOfYear(e.minYear,e.minMonth,e.minDate);r=(o.determineDaysOfYear(e.minYear)-n+1)*i,s=e.minYear+1,this.timeScaleArray.push({position:r,value:s,unit:l,year:s,month:Utils.monthMod(t+1)})}else 1===e.minDate&&0===e.minMonth&&this.timeScaleArray.push({position:r,value:s,unit:l,year:n,month:Utils.monthMod(t+1)});let h=s,c=r;for(let e=0;e<a;e++)h++,c=o.determineDaysOfYear(h-1)*i+c,this.timeScaleArray.push({position:c,value:h,unit:l,year:h,month:1})}generateMonthScale({firstVal:e,currentMonthDate:t,currentMonth:n,currentYear:i,daysWidthOnXAxis:a,numberOfMonths:s}){let r=n,o=0;const l=new DateTime(this.ctx);let h="month",c=0;if(e.minDate>1){o=(l.determineDaysOfMonths(n+1,e.minYear)-t+1)*a,r=Utils.monthMod(n+1);let s=i+c,u=Utils.monthMod(r),m=r;0===r&&(h="year",m=s,u=1,c+=1,s+=c),this.timeScaleArray.push({position:o,value:m,unit:h,year:s,month:u})}else this.timeScaleArray.push({position:o,value:r,unit:h,year:i,month:Utils.monthMod(n)});let u=r+1,m=o;for(let e=0,t=1;e<s;e++,t++){u=Utils.monthMod(u),0===u?(h="year",c+=1):h="month";let e=this._getYear(i,u,c);m=l.determineDaysOfMonths(u,e)*a+m;let t=0===u?e:u;this.timeScaleArray.push({position:m,value:t,unit:h,year:e,month:0===u?1:u}),u++}}generateDayScale({firstVal:e,currentMonth:t,currentYear:n,hoursWidthOnXAxis:i,numberOfDays:a}){const s=new DateTime(this.ctx);let r="day",o=e.minDate+1,l=o;const h=(e,t,n)=>e>s.determineDaysOfMonths(t+1,n)?(l=1,r="month",u=t+=1,t):t;let c=(24-e.minHour)*i,u=o,m=h(l,t,n);0===e.minHour&&1===e.minDate?(c=0,u=Utils.monthMod(e.minMonth),r="month",l=e.minDate):1!==e.minDate&&0===e.minHour&&0===e.minMinute&&(c=0,o=e.minDate,l=o,u=o,m=h(l,t,n)),this.timeScaleArray.push({position:c,value:u,unit:r,year:this._getYear(n,m,0),month:Utils.monthMod(m),day:l});let d=c;for(let e=0;e<a;e++){l+=1,r="day",m=h(l,m,this._getYear(n,m,0));let e=this._getYear(n,m,0);d=24*i+d;let t=1===l?Utils.monthMod(m):l;this.timeScaleArray.push({position:d,value:t,unit:r,year:e,month:Utils.monthMod(m),day:t})}}generateHourScale({firstVal:e,currentDate:t,currentMonth:n,currentYear:i,minutesWidthOnXAxis:a,numberOfHours:s}){const r=new DateTime(this.ctx);let o="hour";const l=(e,t)=>(e>r.determineDaysOfMonths(t+1,i)&&(y=1,t+=1),{month:t,date:y}),h=(e,t)=>e>r.determineDaysOfMonths(t+1,i)?t+=1:t;let c=60-(e.minMinute+e.minSecond/60),u=c*a,m=e.minHour+1,d=m;60===c&&(u=0,m=e.minHour,d=m);let y=t;d>=24&&(d=0,y+=1,o="day");let f=l(y,n).month;f=h(y,f),this.timeScaleArray.push({position:u,value:m,unit:o,day:y,hour:d,year:i,month:Utils.monthMod(f)}),d++;let M=u;for(let e=0;e<s;e++){if(o="hour",d>=24){d=0,y+=1,o="day";f=l(y,f).month,f=h(y,f)}let e=this._getYear(i,f,0);M=60*a+M;let t=0===d?y:d;this.timeScaleArray.push({position:M,value:t,unit:o,hour:d,day:y,year:e,month:Utils.monthMod(f)}),d++}}generateMinuteScale({currentMillisecond:e,currentSecond:t,currentMinute:n,currentHour:i,currentDate:a,currentMonth:s,currentYear:r,minutesWidthOnXAxis:o,secondsWidthOnXAxis:l,numberOfMinutes:h}){let c=n+1,u=a,m=s,d=r,y=i,f=(60-t-e/1e3)*l;for(let e=0;e<h;e++)c>=60&&(c=0,y+=1,24===y&&(y=0)),this.timeScaleArray.push({position:f,value:c,unit:"minute",hour:y,minute:c,day:u,year:this._getYear(d,m,0),month:Utils.monthMod(m)}),f+=o,c++}generateSecondScale({currentMillisecond:e,currentSecond:t,currentMinute:n,currentHour:i,currentDate:a,currentMonth:s,currentYear:r,secondsWidthOnXAxis:o,numberOfSeconds:l}){let h=t+1,c=n,u=a,m=s,d=r,y=i,f=(1e3-e)/1e3*o;for(let e=0;e<l;e++)h>=60&&(c++,h=0,c>=60&&(y++,c=0,24===y&&(y=0))),this.timeScaleArray.push({position:f,value:h,unit:"second",hour:y,minute:c,second:h,day:u,year:this._getYear(d,m,0),month:Utils.monthMod(m)}),f+=o,h++}createRawDateString(e,t){let n=e.year;return 0===e.month&&(e.month=1),n+="-"+("0"+e.month.toString()).slice(-2),"day"===e.unit?n+="day"===e.unit?"-"+("0"+t).slice(-2):"-01":n+="-"+("0"+(e.day?e.day:"1")).slice(-2),"hour"===e.unit?n+="hour"===e.unit?"T"+("0"+t).slice(-2):"T00":n+="T"+("0"+(e.hour?e.hour:"0")).slice(-2),"minute"===e.unit?n+=":"+("0"+t).slice(-2):n+=":"+(e.minute?("0"+e.minute).slice(-2):"00"),"second"===e.unit?n+=":"+("0"+t).slice(-2):n+=":00",this.utc&&(n+=".000Z"),n}formatDates(e){const t=this.w;return e.map((e=>{let n=e.value.toString(),i=new DateTime(this.ctx);const a=this.createRawDateString(e,n);let s=i.getDate(i.parseDate(a));if(this.utc||(s=i.getDate(i.parseDateWithTimezone(a))),void 0===t.config.xaxis.labels.format){let a="dd MMM";const r=t.config.xaxis.labels.datetimeFormatter;"year"===e.unit&&(a=r.year),"month"===e.unit&&(a=r.month),"day"===e.unit&&(a=r.day),"hour"===e.unit&&(a=r.hour),"minute"===e.unit&&(a=r.minute),"second"===e.unit&&(a=r.second),n=i.formatDate(s,a)}else n=i.formatDate(s,t.config.xaxis.labels.format);return{dateString:a,position:e.position,value:n,unit:e.unit,year:e.year,month:e.month}}))}removeOverlappingTS(e){const t=new Graphics(this.ctx);let n,i=!1;e.length>0&&e[0].value&&e.every((t=>t.value.length===e[0].value.length))&&(i=!0,n=t.getTextRects(e[0].value).width);let a=0,s=e.map(((s,r)=>{if(r>0&&this.w.config.xaxis.labels.hideOverlappingLabels){const o=i?n:t.getTextRects(e[a].value).width,l=e[a].position;return s.position>l+o+10?(a=r,s):null}return s}));return s=s.filter((e=>null!==e)),s}_getYear(e,t,n){return e+Math.floor(t/12)+n}}export default TimeScale;