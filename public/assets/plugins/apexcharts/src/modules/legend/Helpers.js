import Graphics from"../Graphics";import Utils from"../../utils/Utils";export default class Helpers{constructor(e){this.w=e.w,this.lgCtx=e}getLegendStyles(){let e=document.createElement("style");e.setAttribute("type","text/css");const s=this.lgCtx.ctx?.opts?.chart?.nonce||this.w.config.chart.nonce;s&&e.setAttribute("nonce",s);let a=document.createTextNode("\n      .apexcharts-legend {\n        display: flex;\n        overflow: auto;\n        padding: 0 10px;\n      }\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {\n        flex-wrap: wrap\n      }\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\n        flex-direction: column;\n        bottom: 0;\n      }\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {\n        justify-content: flex-start;\n      }\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {\n        justify-content: center;\n      }\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {\n        justify-content: flex-end;\n      }\n      .apexcharts-legend-series {\n        cursor: pointer;\n        line-height: normal;\n      }\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{\n        display: flex;\n        align-items: center;\n      }\n      .apexcharts-legend-text {\n        position: relative;\n        font-size: 14px;\n      }\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {\n        pointer-events: none;\n      }\n      .apexcharts-legend-marker {\n        position: relative;\n        display: inline-block;\n        cursor: pointer;\n        margin-right: 3px;\n        border-style: solid;\n      }\n\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{\n        display: inline-block;\n      }\n      .apexcharts-legend-series.apexcharts-no-click {\n        cursor: auto;\n      }\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {\n        display: none !important;\n      }\n      .apexcharts-inactive-legend {\n        opacity: 0.45;\n      }");return e.appendChild(a),e}getLegendBBox(){let e=this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(),s=e.width;return{clwh:e.height,clww:s}}appendToForeignObject(){this.w.globals.dom.elLegendForeign.appendChild(this.getLegendStyles())}toggleDataSeries(e,s){const a=this.w;if(a.globals.axisCharts||"radialBar"===a.config.chart.type){a.globals.resized=!0;let t=null,l=null;if(a.globals.risingSeries=[],a.globals.axisCharts?(t=a.globals.dom.baseEl.querySelector(`.apexcharts-series[data\\:realIndex='${e}']`),l=parseInt(t.getAttribute("data:realIndex"),10)):(t=a.globals.dom.baseEl.querySelector(`.apexcharts-series[rel='${e+1}']`),l=parseInt(t.getAttribute("rel"),10)-1),s){[{cs:a.globals.collapsedSeries,csi:a.globals.collapsedSeriesIndices},{cs:a.globals.ancillaryCollapsedSeries,csi:a.globals.ancillaryCollapsedSeriesIndices}].forEach((e=>{this.riseCollapsedSeries(e.cs,e.csi,l)}))}else this.hideSeries({seriesEl:t,realIndex:l})}else{let s=a.globals.dom.Paper.select(` .apexcharts-series[rel='${e+1}'] path`);const t=a.config.chart.type;if("pie"===t||"polarArea"===t||"donut"===t){let e=a.config.plotOptions.pie.donut.labels;new Graphics(this.lgCtx.ctx).pathMouseDown(s.members[0],null),this.lgCtx.ctx.pie.printDataLabelsInner(s.members[0].node,e)}s.fire("click")}}hideSeries({seriesEl:e,realIndex:s}){const a=this.w,t=a.globals;let l=Utils.clone(a.config.series);if(t.axisCharts){let n=a.config.yaxis[t.seriesYAxisReverseMap[s]];if(n&&n.show&&n.showAlways)t.ancillaryCollapsedSeriesIndices.indexOf(s)<0&&(t.ancillaryCollapsedSeries.push({index:s,data:l[s].data.slice(),type:e.parentNode.className.baseVal.split("-")[1]}),t.ancillaryCollapsedSeriesIndices.push(s));else if(t.collapsedSeriesIndices.indexOf(s)<0){t.collapsedSeries.push({index:s,data:l[s].data.slice(),type:e.parentNode.className.baseVal.split("-")[1]}),t.collapsedSeriesIndices.push(s);let a=t.risingSeries.indexOf(s);t.risingSeries.splice(a,1)}}else t.collapsedSeries.push({index:s,data:l[s]}),t.collapsedSeriesIndices.push(s);let n=e.childNodes;for(let e=0;e<n.length;e++)n[e].classList.contains("apexcharts-series-markers-wrap")&&(n[e].classList.contains("apexcharts-hide")?n[e].classList.remove("apexcharts-hide"):n[e].classList.add("apexcharts-hide"));t.allSeriesCollapsed=t.collapsedSeries.length+t.ancillaryCollapsedSeries.length===a.config.series.length,l=this._getSeriesBasedOnCollapsedState(l),this.lgCtx.ctx.updateHelpers._updateSeries(l,a.config.chart.animations.dynamicAnimation.enabled)}riseCollapsedSeries(e,s,a){const t=this.w;let l=Utils.clone(t.config.series);if(e.length>0){for(let n=0;n<e.length;n++)e[n].index===a&&(t.globals.axisCharts?(l[a].data=e[n].data.slice(),e.splice(n,1),s.splice(n,1),t.globals.risingSeries.push(a)):(l[a]=e[n].data,e.splice(n,1),s.splice(n,1),t.globals.risingSeries.push(a)));l=this._getSeriesBasedOnCollapsedState(l),this.lgCtx.ctx.updateHelpers._updateSeries(l,t.config.chart.animations.dynamicAnimation.enabled)}}_getSeriesBasedOnCollapsedState(e){const s=this.w;let a=0;return s.globals.axisCharts?e.forEach(((t,l)=>{s.globals.collapsedSeriesIndices.indexOf(l)<0&&s.globals.ancillaryCollapsedSeriesIndices.indexOf(l)<0||(e[l].data=[],a++)})):e.forEach(((t,l)=>{!s.globals.collapsedSeriesIndices.indexOf(l)<0&&(e[l]=0,a++)})),s.globals.allSeriesCollapsed=a===e.length,e}}