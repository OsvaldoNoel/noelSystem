jQuery.Deferred&&(QUnit.module("deferred"),QUnit.test("jQuery.Deferred.exceptionHook",(function(e){e.expect(1),e.ok("function"==typeof jQuery.Deferred.exceptionHook,"hook is present")})),QUnit.test(".pipe() warnings",(function(e){e.expect(4);var r=jQuery.Deferred(),t=r.promise();function n(r){e.equal(r,1,"got correct value")}expectWarning(e,"pipe",(function(){r.pipe(n)})),expectWarning(e,"pipe",(function(){t.pipe(n)})),r.resolve(1)})),QUnit.test("[PIPE ONLY] jQuery.Deferred.pipe - filtering (fail)",(function(e){e.expect(4);var r,t,n,o=jQuery.Deferred(),i=o.pipe(null,(function(e,r){return e*r})),u=jQuery.map(new Array(3),(function(){return e.async()}));i.fail((function(e){n=e})),o.fail((function(e,n){r=e,t=n})),o.reject(2,3).pipe(null,(function(){e.strictEqual(r,2,"first reject value ok"),e.strictEqual(t,3,"second reject value ok"),e.strictEqual(n,6,"result of filter ok"),u.pop().call()})),jQuery.Deferred().resolve().pipe(null,(function(){e.ok(!1,"then should not be called on resolve")})).then(u.pop()),jQuery.Deferred().reject().pipe(null,jQuery.noop).fail((function(r){e.strictEqual(r,void 0,"then fail callback can return undefined/null"),u.pop().call()}))})),QUnit.test("[PIPE ONLY] jQuery.Deferred.pipe - deferred (progress)",(function(e){e.expect(3);var r,t,n,o=jQuery.Deferred(),i=o.pipe(null,null,(function(e,r){return jQuery.Deferred((function(t){t.resolve(e*r)}))})),u=e.async();i.done((function(e){n=e})),o.progress((function(e,n){r=e,t=n})),o.notify(2,3),i.done((function(){e.strictEqual(r,2,"first progress value ok"),e.strictEqual(t,3,"second progress value ok"),e.strictEqual(n,6,"result of filter ok"),u()}))})),QUnit.test("[PIPE ONLY] jQuery.Deferred.pipe - context",(function(e){e.expect(5);var r,t,n,o,i={},u=jQuery.map(new Array(4),(function(){return e.async()}));jQuery.Deferred().resolveWith(i,[2]).pipe((function(e){return 3*e})).done((function(r){e.strictEqual(this,i,"[PIPE ONLY] custom context correctly propagated"),e.strictEqual(r,6,"proper value received"),u.pop().call()})),jQuery.Deferred().resolve().pipe((function(){return jQuery.Deferred().resolveWith(i)})).done((function(){e.strictEqual(this,i,"custom context of returned deferred correctly propagated"),u.pop().call()})),t=(r=jQuery.Deferred()).pipe((function(e){return 3*e})),r.resolve(2),t.done((function(r){e.strictEqual(r,6,"proper value received"),u.pop().call()})),o=(n=jQuery.Deferred()).pipe(),n.resolve(2),o.done((function(r){e.strictEqual(r,2,"proper value received (without passing function)"),u.pop().call()}))})));